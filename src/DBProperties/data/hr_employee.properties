userLogin = SELECT \
            e.id, e.code AS employee_id, \
            e.employeetype_id, et.description AS employee_type_description, et.code AS employee_type_code, \
            e.employeedepartment_id, ed.description AS  employee_department_description, ed.code AS employee_department_code, \
            e.employeedesignation_id, eds.description AS employee_designation_description, \
            e.birthdate, e.honorific, \
            e.lastname, e.firstname, e.middlename, \
            e.currentaddress1, e.currentaddress2, e.currentcity_id, cc.name AS current_city_name, e.currentpin, e.currentstate, cs.name AS current_state_name, \
            e.permanentaddress1, e.permanentaddress2, e.permanentcity_id, pc.name AS permanent_city_name, e.permanentpin, e.permanentstate, ps.name AS permanent_state_name, \
            e.qualification, \
            e.dateofjoining, e.dateofleaving, \
            e.epfnumber, e.fpfnumber, \
            e.pannumber, e.aadharnumber, \
            e.bankaccountnumber, e.bankname, e.bankifsccode, \
            e.email, e.phonenumber, e.mobile, \
            e.company_id, com.name AS company_name, \
            e.nextofkinname, e.nextofkinaddress, e.nextofkinemail, e.nextofkinphone, e.nextofkinrelationwithemployee, \
            e.empprofilemdocid, e.adharcardmdocid, e.pancardmdocid, e.employeeusername, e.employeeuserpassword \
            FROM data.hr_employee e \
            LEFT JOIN data.cm_employeetype  et ON et.id = employeetype_id \
            LEFT JOIN data.cm_employeedepartment ed ON ed.id = e.employeedepartment_id \
            LEFT JOIN data.cm_employeedesignation eds ON eds.id = e.employeedesignation_id \
            LEFT JOIN data.cm_city cc ON cc.id = e.currentcity_id \
            LEFT JOIN data.cm_state cs ON cs.id = e.currentstate \
            LEFT JOIN data.cm_city pc ON pc.id = e.permanentcity_id \
            LEFT JOIN data.cm_state ps ON ps.id = e.permanentstate \
            LEFT JOIN data.cc_company com ON com.id = e.company_id \
            WHERE employeeusername='{req.body.username}' AND employeeuserpassword='{req.body.password}' \

userModules = SELECT modules_name \
                    FROM openxava.oxroles_oxmodules \
                    where roles_name in \
                    ( \
                        SELECT distinct  roles_name \
                        FROM openxava.oxusers_oxroles \
                        --where roles_name ='product middle' \
                        --where oxusers_name ='abhijeet.khade' \
                        --where oxusers_name ='sudhir.mane' \
                        --where oxusers_name ='vinayak.thorwat' \
                        where oxusers_name ='{oxusers_name}' \
                    )

authorizeUser = SELECT aclprogramname.programname \
                FROM data.vw_acl_user_role userrole \
                join data.vw_acl_role_program aclprogramname on (aclprogramname.rolename = userrole.rolename) \
                where userrole.username ='{username}'

employeeId = SELECT code FROM data.hr_employee \
            Where SUBSTRING(trim(code), 1, 5) = '{empDeptCode}-{empTypeCode}' \
            ORDER BY updatedon DESC limit 1

userRegister =  INSERT INTO data.hr_employee( \
                deleted, version, updatedon, createdby, code, \
                employeetype_id, employeedepartment_id, \
                employeedesignation_id, birthdate, honorific, \
                lastname, firstname, middlename, currentaddress1, \
                currentaddress2, currentcity_id, currentpin, currentstate, \
                permanentaddress1, permanentaddress2, permanentcity_id, \
                permanentpin, permanentstate, qualification, dateofjoining, \
                epfnumber, fpfnumber, pannumber, aadharnumber, bankaccountnumber, \
                bankname, email, mobile, company_id, nextofkinname, \
                bankifsccode, nextofkinphone, nextofkinrelationwithemployee) \
                VALUES ('false', 0, NOW(), '{createdby}', '{code}', '{employeetype_id}', \
                '{employeedepartment_id}', '{employeedesignation_id}', '{birthdate}', \
                '{honorific}', '{lastName}', '{firstname}', \
                '{middleName}', '{currentAddressLine1}', '{currentAddressLine2}', \
                '{currentCity}', {currentPinCode}, '{currentState}', '{permanentAddressLine1}', \
                '{permanentAddressLine2}', '{permanentCity}', {permanentPinCode}, '{permanentState}', \
                '{qualification}', '{joiningDate}', '{employeePfNumber}', '{familyPfNumber}','{panCardNumber}', \
                '{adharcardNumber}', '{bnkAcNumber}', '{bankname}', '{emailAddress}', \
                '{mobileNumber}', '{company}', '{familyMember}', '{bankIFSCCode}', \
                '{relative_mob_num}', '{relationWithFamilyMember}') RETURNING Id;    

registeredEmployeeId =  SELECT id \
                        FROM data.hr_employee \
                        where firstname ='{firstname}' \
                        and lastname = '{lastname}'   

empFullName =   SELECT id, concat( firstname || ' ' || middlename || ' ' ||  lastname)as employeename, mobile, \
                employeeusername, employeeuserpassword \
                FROM data.hr_employee

insertDocumentsIds = UPDATE data.hr_employee SET  empprofilemdocid='{empprofilemdocid}', adharcardmdocid='{adharcardmdocid}', pancardmdocid='{pancardmdocid}' WHERE id ='{empid}'

createUserCredentials = UPDATE data.hr_employee SET employeeusername='{employeeusername}', employeeuserpassword= '{employeeuserpassword}' WHERE id ='{id}';

operatorList = SELECT e.id,concat( firstname || ' ' || middlename || ' ' ||  lastname) as employeename \
                FROM data.hr_employee e \
                join data.cm_employeedepartment dept on dept.id = e.employeedepartment_id \
                WHERE employeedepartment_id in ('40289b815b375a2b015b3766eb250009','44d25793f77645c7bc0767cf3f95d6d8') \
                and employeedesignation_id in  ('40289b815b375a2b015b3768049d000d','40289b815b375a2b015b376823ae000e') \
                ORDER BY firstname asc


operatorovertimedata =  SELECT eo.id,eo.employee_id,eo.workstation_id,eo.starttime,eo.endtime, \
                CASE \
                    WHEN eo.starttime <> '' AND eo.endtime <> '' THEN \
                    TO_CHAR(FLOOR(EXTRACT(EPOCH FROM (CAST(eo.endtime AS timestamp) - CAST(eo.starttime AS timestamp))) / 3600), 'FM9999') \
                    ELSE ''END AS overtime_hours, \
                    CASE WHEN eo.starttime <> '' AND eo.endtime <> '' THEN TO_CHAR(EXTRACT(MINUTE FROM (CAST(eo.endtime AS timestamp) - CAST(eo.starttime AS timestamp))), 'FM99') ELSE '' \
                    END AS overtime_minutes,concat(he.firstname || ' ' || he.middlename || ' ' ||  he.lastname) AS employeename,ws.code AS wscode,eo.remark \
                FROM ppc.employee_overtime eo \
                    JOIN data.hr_employee he ON (he.id = eo.employee_id) \
                    JOIN data.wr_workcentre_workstation ws ON (eo.workstation_id = ws.id) \
                WHERE eo.employee_id = '{empid}' \
                ORDER BY eo.updatedon DESC LIMIT 31;

operatorovertimeinsertdata =  INSERT INTO ppc.employee_overtime ( \
                              deleted, version, updatedon, createdby, employee_id, workstation_id, starttime, endtime,remark \
                              ) VALUES ( \
                              false, 0, now(), '{loginid}', '{empid}', '{wsid}', '{starttime}', '{endtime}', '{remarkk}') \
                               RETURNING id
insertchildoperatorovertimedata = INSERT INTO ppc.employee_overtime_details \
                                (deleted, version, updatedon, employee_overtime_id, po_id, product_id, lineitem, seqno, instruction, remark) \
                                VALUES (false,0,NOW(),'{empovertimeid}','{poid}','{productid}', '{lineitemno}','{seqno}','{instruc}','-') RETURNING id

updateoperatorovertimedata = UPDATE ppc.employee_overtime SET endtime='{endtime}' WHERE id='{id}' and employee_id='{empid}'

selectEODdata = SELECT eod.id, eod.employee_overtime_id, po_id,so.referancedocumentnumber as pono, product_id,pp.code as productcode, lineitem, seqno, instruction \
            FROM ppc.employee_overtime_details eod \
            left join data.ss_salesorder so on (so.id=eod.po_id) \
            left join data.pd_product pp on (pp.id=eod.product_id) \
            where employee_overtime_id='{tableid}'

monthlyovertimedata = SELECT \
                        eo.id AS overtime_id, \
                        concat(he.firstname || ' ' || he.middlename || ' ' || he.lastname) as employeename, \
                        ws.code as workstation, \
                        eo.starttime, \
                        eo.endtime, \
                        eo.remark, \
                        STRING_AGG(so.referancedocumentnumber || ' ' || pp.code || ' ' || eod.lineitem || ' ' || eod.seqno || ' ' || eod.instruction, ';;') AS workDetails, \
                        FLOOR(EXTRACT(EPOCH FROM (CAST(eo.endtime AS timestamp) - CAST(eo.starttime AS timestamp))) / 3600) AS overtime_hours, \
                        EXTRACT(MINUTE FROM (CAST(eo.endtime AS timestamp) - CAST(eo.starttime AS timestamp))) AS overtime_minutes \
                        FROM ppc.employee_overtime eo \
                        LEFT JOIN data.hr_employee he ON (he.id = eo.employee_id) \
                        LEFT JOIN ppc.employee_overtime_details eod ON (eod.employee_overtime_id = eo.id) \
                        LEFT JOIN data.ss_salesorder so ON (so.id = eod.po_id) \
                        LEFT JOIN data.pd_product pp ON (pp.id = eod.product_id) \
                        LEFT JOIN data.wr_workcentre_workstation ws on (ws.id = eo.workstation_id) \
                        GROUP BY eo.id, he.firstname, he.middlename, he.lastname, eo.starttime, eo.endtime,eo.remark,ws.code \
                        ORDER BY eo.updatedon DESC

deleterecordOvertimeData = DELETE FROM ppc.employee_overtime WHERE id='{EOD_id}'

notification_user_check = SELECT count(*)::int FROM ppc.notification where employee_id = '{employee_id}'

# Update employee details

allEmployeeDetails =    SELECT \
                        e.id, e.code AS employee_id, \
                        e.employeetype_id, et.description AS employee_type_description, et.code AS employee_type_code, \
                        e.employeedepartment_id, ed.description AS  employee_department_description, ed.code AS employee_department_code, \
                        e.employeedesignation_id, eds.description AS employee_designation_description, \
                        e.birthdate, e.honorific, \
                        e.lastname, e.firstname, e.middlename, \
                        e.currentaddress1, e.currentaddress2, e.currentcity_id, cc.name AS current_city_name, e.currentpin, e.currentstate, cs.name AS current_state_name, \
                        e.permanentaddress1, e.permanentaddress2, e.permanentcity_id, pc.name AS permanent_city_name, e.permanentpin, e.permanentstate, ps.name AS permanent_state_name, \
                        e.qualification, \
                        e.dateofjoining, e.dateofleaving, \
                        e.epfnumber, e.fpfnumber, \
                        e.pannumber, e.aadharnumber, \
                        e.bankaccountnumber, e.bankname, e.bankifsccode, \
                        e.email, e.phonenumber, e.mobile, \
                        e.company_id, com.name AS company_name, \
                        e.nextofkinname, e.nextofkinaddress, e.nextofkinemail, e.nextofkinphone, e.nextofkinrelationwithemployee, \
                        e.empprofilemdocid, e.adharcardmdocid, e.pancardmdocid, e.employeeusername, e.employeeuserpassword \
                        FROM data.hr_employee e \
                        LEFT JOIN data.cm_employeetype  et ON et.id = employeetype_id \
                        LEFT JOIN data.cm_employeedepartment ed ON ed.id = e.employeedepartment_id \
                        LEFT JOIN data.cm_employeedesignation eds ON eds.id = e.employeedesignation_id \
                        LEFT JOIN data.cm_city cc ON cc.id = e.currentcity_id \
                        LEFT JOIN data.cm_state cs ON cs.id = e.currentstate \
                        LEFT JOIN data.cm_city pc ON pc.id = e.permanentcity_id \
                        LEFT JOIN data.cm_state ps ON ps.id = e.permanentstate \
                        LEFT JOIN data.cc_company com ON com.id = e.company_id \
                        ORDER BY e.updatedon DESC

updateEmployee =    UPDATE data.hr_employee \
                    SET \
                        version = version + 1, \
                        updatedon = NOW(), \
                        createdby = COALESCE('{createdby}', createdby), \
                        birthdate = NULLIF('{birthdate}', 'NULL')::DATE, \
                        honorific = NULLIF('{honorific}', 'NULL'), \
                        lastname = NULLIF('{lastname}', 'NULL'), \
                        firstname = NULLIF('{firstname}', 'NULL'), \
                        middlename = NULLIF('{middlename}', 'NULL'), \
                        currentaddress1 = NULLIF('{currentaddress1}', 'NULL'), \
                        currentaddress2 = NULLIF('{currentaddress2}', 'NULL'), \
                        currentcity_id = NULLIF('{currentcity_id}', 'NULL'), \
                        currentpin = NULLIF({currentpin}, NULL)::INTEGER, \
                        currentstate = NULLIF('{currentstate}', 'NULL'), \
                        permanentaddress1 = NULLIF('{permanentaddress1}', 'NULL'), \
                        permanentaddress2 = NULLIF('{permanentaddress2}', 'NULL'), \
                        permanentcity_id = NULLIF('{permanentcity_id}', 'NULL'), \
                        permanentpin = NULLIF({permanentpin}, NULL)::INTEGER, \
                        permanentstate =  NULLIF('{permanentstate}', 'NULL'), \
                        qualification = NULLIF('{qualification}', 'NULL'), \
                        dateofjoining = NULLIF('{dateofjoining}', 'NULL')::DATE, \
                        dateofleaving = NULLIF('{dateofleaving}', 'NULL')::DATE, \
                        epfnumber = NULLIF('{epfnumber}', 'NULL'), \
                        fpfnumber = NULLIF('{fpfnumber}', 'NULL'), \
                        pannumber = NULLIF('{pannumber}', 'NULL'), \
                        aadharnumber = NULLIF('{aadharnumber}', 'NULL'), \
                        bankaccountnumber = NULLIF('{bankaccountnumber}', 'NULL'), \
                        bankname = NULLIF('{bankname}', 'NULL'), \
                        email = NULLIF('{email}', 'NULL'), \
                        mobile = NULLIF('{mobile}', 'NULL'), \
                        nextofkinname = NULLIF('{nextofkinname}', 'NULL'), \
                        bankifsccode = NULLIF('{bankifsccode}', 'NULL'), \
                        nextofkinphone = NULLIF('{nextofkinphone}', 'NULL'), \
                        nextofkinrelationwithemployee = NULLIF('{nextofkinrelationwithemployee}', 'NULL') \
                    WHERE id = '{id}' RETURNING ID;