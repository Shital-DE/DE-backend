androidId = SELECT ws.id as workstationid, ws.code as workstation, wr_workcentre_id, wc.code as workcentre, android_id, machineid, machinename \
            FROM data.wr_workcentre_workstation ws \
            join data.wr_workcentre wc on (wc.id = ws.wr_workcentre_id) \
            where ws.android_id ='{androidid}'

isMachineAutomatic = SELECT id, wr_workcentre_id, code, workstationgroup_code, isautomatic \
                    FROM data.wr_workcentre_workstation \
                    where id= '{id}' and wr_workcentre_id='{wr_workcentre_id}'

workstationsBywordkcentreId = SELECT id, code FROM data.wr_workcentre_workstation where wr_workcentre_id='{wr_workcentre_id}' ORDER BY code ASC

checkTabIsAlreadyRegisteredOrNot = SELECT id, code, android_id FROM data.wr_workcentre_workstation where id='{id}' and android_id is not null ORDER BY id ASC

allWorkstationsWithAndroidId =  SELECT ws.id, wc.code as workcentre, ws.code as workstation, ws.android_id \
                                FROM data.wr_workcentre_workstation ws \
                                JOIN data.wr_workcentre wc ON wc.id = ws.wr_workcentre_id \
                                ORDER BY wc.code, ws.code ASC

# select id, code, workstationgroup_code,android_id  from data.wr_workcentre_workstation

tabletRegistrationAPI = UPDATE data.wr_workcentre_workstation \
                        SET  version=version+1,   android_id='{androidid}' \
                        WHERE id='{stationId}'

registerWorkstation =   INSERT INTO data.wr_workcentre_workstation( \
                        deleted, version, updatedon, createdby, \
                        wr_workcentre_id, shiftpattern_id, code, \
                        costperhour, workstationgroup_code, isinhouse) \
                        VALUES ('false', 0, NOW(), '{createdby}', '{wr_workcentre_id}', \
                        '{shiftpattern_id}', '{code}', 0, '{workstationgroup_code}', '{isinhouse}') \

deleteAndroidId =   UPDATE data.wr_workcentre_workstation SET android_id = NULL \
                    WHERE id='{stationId}'
					
				
				
workstationList = SELECT id,  wr_workcentre_id, trim(code) as code, isinhouse, android_id, isautomatic \
          FROM data.wr_workcentre_workstation \
          where isinhouse = 'Y' and isautomatic is not null and isautomatic = 'Y' \
          order by code, wr_workcentre_id  asc

dashboardWorkstationList = WITH LatestRecords AS ( \
                SELECT \
                    wws.id, \
                    wws.wr_workcentre_id, \
                    wws.code, \
                    wws.machineid, \
                    wws.machinename, \
                    wws.machineip, \
                    pp.code as productcode, \
                    pws.product_id as productid, \
                    pws.rmsissue_id as rmsid, \
                    so.referancedocumentnumber as PONO, \
                    pws.process_sequence as seqno, \
                    rms.tobeproducedquantity as qty, \
                    concat(he.firstname || ' ' || he.lastname) as employeename, \
                    pws.startprocesstime, \
                    pws.endprocesstime, \
                    pws.endprocessflag, wws.feedrate, wws.idletime, wws.productiontime, wws.machinestatus, wws.partcount, wws.energy,wws.cyclerun, \
                    ROW_NUMBER() OVER (PARTITION BY pws.workstation_id ORDER BY pws.startprocesstime DESC) AS rn \
                FROM data.wr_workcentre_workstation wws \
                LEFT JOIN ppc.pd_product_workstationroute_status pws ON (pws.workstation_id = wws.id) \
                LEFT JOIN data.pd_product pp on(pp.id=pws.product_id) \
                LEFT JOIN data.rms_rawmaterialissue rms on (rms.id=pws.rmsissue_id) \
                LEFT JOIN data.ss_salesorder so on (so.id = rms.salesorder_id) \
                LEFT JOIN data.ss_salesorder_detail sod on (sod.ss_salesorder_id=so.id AND sod.product_id = pp.id) \
                LEFT JOIN data.hr_employee he on (he.id = pws.employee_id) \
                WHERE wws.isautomatic = 'Y' AND isundermaintance = 'N') \
                SELECT id,wr_workcentre_id,code,machineid,machinename,machineip,productid, \
                productcode,rmsid,PONO,seqno,qty,employeename,startprocesstime,endprocesstime,endprocessflag,feedrate, idletime, productiontime, machinestatus, partcount, energy,cyclerun \
                FROM \
                LatestRecords \
                WHERE rn = 1 \
                ORDER BY \
                code, startprocesstime DESC

employeeOvertimeWorkstationlist= SELECT id, code as workstation \
                                 FROM data.wr_workcentre_workstation \
                                 where isautomatic in ('Y','N') and isundermaintance ='N'

automaticWorkcentreList = select DISTINCT wr_workcentre_id, wc.code \
                        FROM data.wr_workcentre_workstation ws \
                        left join data.wr_workcentre wc on (wc.id =ws.wr_workcentre_id) \
                        where ws.isinhouse ='Y' and  ws.isautomatic='Y'

assemblyAssignedWorkstations =  SELECT ws.id AS workstation_id, ws.code AS workstation, wc.code AS workcentre, wc.id AS workcentre_id \
                                FROM data.wr_workcentre_workstation ws \
                                LEFT JOIN data.wr_workcentre wc ON wc.id = ws.wr_workcentre_id \
                                WHERE android_id = '{android_id}' \
                                ORDER BY \
                                    LEFT(TRIM(ws.code), LENGTH(TRIM(ws.code)) - LENGTH(REGEXP_REPLACE(TRIM(ws.code), '[^0-9]', ''))) ASC, \
                                    NULLIF(REGEXP_REPLACE(TRIM(ws.code), '[^0-9]', '', 'g'), '')::INT ASC;


assemblyWorkstations =  SELECT ws.id AS workstation_id, ws.code AS workstation, wc.code AS workcentre, wc.id AS workcentre_id \
                        FROM data.wr_workcentre_workstation ws \
                        LEFT JOIN data.wr_workcentre wc ON wc.id = wr_workcentre_id \
                        WHERE wr_workcentre_id = '4028817574b9e34f0174ba50adf80023' \
                        ORDER BY \
                            LEFT(TRIM(ws.code), LENGTH(TRIM(ws.code)) - LENGTH(REGEXP_REPLACE(TRIM(ws.code), '[^0-9]', ''))) ASC, \
                            NULLIF(REGEXP_REPLACE(TRIM(ws.code), '[^0-9]', '', 'g'), '')::INT ASC;
