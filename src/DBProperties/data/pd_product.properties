allProductQuery = SELECT pp.id, pp.code, pp.description, pp.updatedon \
                    FROM data.pd_product pp \
                    LEFT JOIN data.cm_producttype pt ON pt.id = pp.producttype_id \
                    WHERE pt.producttypecode IN ('04', '05', 'P') \
                    ORDER BY pp.updatedon DESC \

#Select id, code, updatedon from data.pd_product Order by updatedon desc

oneProductQuery = Select id, code, updatedon from data.pd_product where id = 'oneProductQueryid'

productMasterData = SELECT pp.id, pp.code, cpos.revision_number, pp.description, pp.updatedon \
                    FROM data.pd_product pp \
                    JOIN data.vw_ss_customer_pos cpos ON cpos.product_id = pp.id \
                    WHERE pp.id = '{productid}' \
                    GROUP BY pp.id, pp.code, cpos.revision_number, pp.description, pp.updatedon \
                    ORDER BY pp.code, cpos.revision_number


#assembly
allProductlist =  SELECT pp.id, pp.code FROM data.pd_product pp WHERE pp.producttype_code IN ('04', '05', 'P') ORDER BY pp.updatedon DESC

asproductdata =     SELECT pp.id,pp.code,pp.description, \
                    pp.updatedon, \
                    pp.producttype_id, pp.producttype_code, cp.category \
                    FROM data.pd_product pp \
                    join data.cm_producttype cp on(cp.id=pp.producttype_id) \
                    where pp.id ='{product_id}'

insertproductinmaster=INSERT INTO ppc.as_pd_product_stock( \
	                  productid, description, producttypeid, producttypename, category, productcode, createdby) \
	                  VALUES ( '{product_id}', '{description}', '{producttypeid}', '{producttypename}', '{category}','{productcode}', '{createdby}')


qualityInstruments = SELECT id, description \
                    FROM data.pd_product \
                    WHERE producttype_id = '40289b815a4b581b015a4b5a8b770000' \

# Measuring Instruments
measuringInstruments =  SELECT id, code, producttype_id, description \
                        FROM data.pd_product \
                        WHERE producttype_id='40289b815a4b581b015a4b5a8b770000' \

registerInstruments =   DO $$ \
                        DECLARE \
                            v_updatedon TIMESTAMP := now(); \
                            v_createdby VARCHAR := '{createdby}'; \
                            v_company_id VARCHAR := '4028b88151d2e8100151d2fdc1240000'; \
                            v_code VARCHAR := '{code}'; \
                            v_producttype_id VARCHAR := '40289b815a4b581b015a4b5a8b770000'; \
                            v_company_code VARCHAR := 'DE'; \
                            v_producttype_code VARCHAR := '09'; \
                            v_storagelocation VARCHAR := '{storagelocation}'; \
                            v_racknumber INT := {racknumber}; \
                            v_description VARCHAR := '{description}'; \
                        BEGIN \
                            IF EXISTS ( \
                                SELECT 1 FROM data.pd_product WHERE code = v_code \
                            ) THEN \
                                RAISE EXCEPTION 'Product already found.'; \
                            ELSE \
                                INSERT INTO data.pd_product ( \
                                    updatedon, createdby, company_id, code, producttype_id, \
                                    company_code, producttype_code, storagelocation, racknumber, description \
                                ) VALUES ( \
                                    v_updatedon, v_createdby, v_company_id, v_code, \
                                    v_producttype_id, v_company_code, v_producttype_code, \
                                    v_storagelocation, v_racknumber, v_description \
                                ); \
                                RAISE NOTICE 'Record inserted successfully'; \
                            END IF; \
                        END $$; 

instrumentReturnId = SELECT id FROM data.pd_product WHERE code = '{code}'

oneInstrument = SELECT code, description FROM data.pd_product WHERE id = '{id}'

getProductTdsData = SELECT id, TRIM( BOTH ' ' FROM code ) as code, description, hastds \
            FROM data.pd_product \
            WHERE code = '{productCode}'

updateProductTdsData = UPDATE data.pd_product \
                    SET hastds = '{hasTds}' \
                    WHERE id = '{productId}'

getAccountForeignData = SELECT id, name, isforeigncompany \
        FROM data.ac_account \
        WHERE name = '{accountName}'

updateAccountForeignData = UPDATE data.ac_account \
        SET isforeigncompany = '{isForeignCompany}' \
        WHERE id = '{accId}'

# Assembly 
productListForFillProductStructure =    WITH revision_agg AS ( \
                                            SELECT sod.product_id, \
                                                ARRAY_AGG(DISTINCT TRIM(sod.revision_number) ORDER BY TRIM(sod.revision_number) DESC) AS revision_numbers \
                                            FROM data.ss_salesorder_detail sod \
                                            WHERE TRIM(sod.revision_number) != '' \
                                            GROUP BY sod.product_id \
                                        ) \
                                        SELECT DISTINCT \
                                            pp.code AS product, \
                                            CASE \
                                                WHEN ra.revision_numbers IS NOT NULL AND array_length(ra.revision_numbers, 1) > 0 THEN ra.revision_numbers \
                                                WHEN EXISTS ( \
                                                    SELECT 1 \
                                                    FROM ppc.pd_product_structure \
                                                    WHERE childproduct_id = pp.id \
                                                ) THEN ( \
                                                    SELECT ARRAY_AGG(DISTINCT TRIM(revision_number) ORDER BY TRIM(revision_number) DESC) \
                                                    FROM ppc.pd_product_structure \
                                                    WHERE childproduct_id = pp.id \
                                                ) \
                                                ELSE '{}'::TEXT[] \
                                            END AS revision_numbers, \
                                            TRIM(pp.description) AS description, \
                                            TRIM(pt.name) AS producttype, \
                                            TRIM(uom.name) AS uom, \
                                            pp.id AS product_id, \
                                            pp.producttype_id, \
                                            pp.uom_id, \
                                            pp.updatedon \
                                        FROM data.pd_product pp \
                                        JOIN data.cm_producttype pt ON pt.id = pp.producttype_id \
                                        JOIN data.cm_uom uom ON uom.id = pp.uom_id \
                                        LEFT JOIN revision_agg ra ON ra.product_id = pp.id \
                                        WHERE pp.producttype_id IN ( \
                                            '4028b88151c96d3f0151c96fd3120001', \
                                            '4028b88151c96d3f0151c96fecf00002', \
                                            '402881e559cf1bb70159cf31148f000c' \
                                        ) \
                                        ORDER BY pp.updatedon DESC; 


                                        # WITH revision_agg AS ( \
                                        # SELECT sod.product_id, ARRAY_AGG(DISTINCT TRIM(sod.revision_number) ORDER BY TRIM(sod.revision_number) DESC) AS revision_numbers \
                                        # FROM data.ss_salesorder_detail sod \
                                        # GROUP BY sod.product_id \
                                        # ) \
                                        # SELECT DISTINCT \
                                        #     pp.code AS product, \
                                        #     CASE \
                                        #         WHEN ra.revision_numbers IS NOT NULL THEN ra.revision_numbers \
                                        #         WHEN EXISTS ( \
                                        #             SELECT 1 \
                                        #             FROM ppc.pd_product_structure \
                                        #             WHERE childproduct_id = pp.id \
                                        #         ) THEN ( \
                                        #             SELECT ARRAY_AGG(DISTINCT TRIM(revision_number) \
                                        #             ORDER BY TRIM(revision_number) DESC) \
                                        #             FROM ppc.pd_product_structure \
                                        #             WHERE childproduct_id = pp.id \
                                        #         ) \
                                        #         ELSE '{}' \
                                        #     END AS revision_numbers, \
                                        #     TRIM(pp.description) AS description, \
                                        #     TRIM(pt.name) AS producttype, \
                                        #     TRIM(uom.name) AS uom, \
                                        #     pp.id AS product_id, \
                                        #     pp.producttype_id, \
                                        #     pp.uom_id, \
                                        #     pp.updatedon \
                                        # FROM data.pd_product pp \
                                        # JOIN data.cm_producttype pt ON pt.id = pp.producttype_id \
                                        # JOIN data.cm_uom uom ON uom.id = pp.uom_id \
                                        # LEFT JOIN revision_agg ra ON ra.product_id = pp.id \
                                        # WHERE pp.producttype_id IN ( \
                                        #     '4028b88151c96d3f0151c96fd3120001', \
                                        #     '4028b88151c96d3f0151c96fecf00002', \
                                        #     '402881e559cf1bb70159cf31148f000c' \
                                        # ) \
                                        # ORDER BY pp.updatedon DESC; \

                                        # WITH revision_agg AS ( \
                                        # SELECT sod.product_id, ARRAY_AGG(DISTINCT TRIM(sod.revision_number) ORDER BY TRIM(sod.revision_number) DESC) AS revision_numbers \
                                        # FROM data.ss_salesorder_detail sod \
                                        # GROUP BY sod.product_id \
                                        # ) \
                                        # SELECT DISTINCT \
                                        #     pp.code AS product, \
                                        #     COALESCE(ra.revision_numbers, '{}') AS revision_numbers, \
                                        #     TRIM(pp.description) AS description, \
                                        #     TRIM(pt.name) AS producttype, \
                                        #     TRIM(uom.name) AS uom, \
                                        #     pp.id AS product_id, \
                                        #     pp.producttype_id, \
                                        #     pp.uom_id, \
                                        #     pp.updatedon \
                                        # FROM data.pd_product pp \
                                        # JOIN data.cm_producttype pt ON pt.id = pp.producttype_id \
                                        # JOIN data.cm_uom uom ON uom.id = pp.uom_id \
                                        # LEFT JOIN revision_agg ra ON ra.product_id = pp.id \
                                        # WHERE pp.producttype_id IN ( \
                                        #     '4028b88151c96d3f0151c96fd3120001', \
                                        #     '4028b88151c96d3f0151c96fecf00002', \
                                        #     '402881e559cf1bb70159cf31148f000c' \
                                        # ) \
                                        # ORDER BY pp.updatedon DESC; \

registerProducts =  INSERT INTO data.pd_product( \
                    createdby, company_id, code, producttype_id, uom_id, storagelocation, racknumber, description, revisionnumber) \
                    VALUES ('{createdby}', '{company_id}', '{code}', '{producttype_id}', '{uom_id}', '{storagelocation}', {racknumber}, '{description}', {revisionnumber}); \