startProduction =   INSERT INTO assembly.as_production_status( \
                    createdby, product_id, revisionnumber, productionschedule_id, processroute_id, workstation_id, starttime, producedquantity) \
                    VALUES ('{createdby}', '{product_id}', '{revisionnumber}', '{productionschedule_id}', '{processroute_id}', \
                    '{workstation_id}', NOW(), 0) RETURNING id;

initiatedProductionQuery =  SELECT id, starttime \
                            FROM assembly.as_production_status \
                            WHERE product_id = '{product_id}' AND revisionnumber = '{revisionnumber}' AND productionschedule_id = '{productionschedule_id}' \
                            AND processroute_id = '{processroute_id}' \
                            AND workstation_id = '{workstation_id}' AND endprocesstime IS NULL \
                            ORDER BY starttime DESC \
                            LIMIT 1
                    
producedQuantityOfSpacificProduct = SELECT \
									CAST(SUM(producedquantity) AS INTEGER) AS producedquantity, \
    								CAST(SUM(rejectedquantity) AS INTEGER) AS rejectedquantity \
                                    FROM assembly.as_production_status \
                                    WHERE product_id = '{product_id}' AND revisionnumber = '{revisionnumber}' AND productionschedule_id = '{productionschedule_id}' \
                                    AND processroute_id = '{processroute_id}' \
                                    AND workstation_id = '{workstation_id}' 

endProcess = 	UPDATE assembly.as_production_status \
                SET version = version + 1, producedquantity={producedquantity}, rejectedquantity={rejectedquantity}, rejectionreason='{rejectionreason}', endprocesstime=NOW() \
                WHERE id = '{id}';

endProduction = UPDATE assembly.as_production_status \
				SET version = version + 1, endproductiontime = NOW() \
				WHERE product_id = '{product_id}' AND revisionnumber = '{revisionnumber}' AND productionschedule_id = '{productionschedule_id}' \
				AND processroute_id = '{processroute_id}' AND workstation_id = '{workstation_id}';

productionRecent100Entries = SELECT \
								cp.code AS child_product, \
								prod_status.revisionnumber AS child_revision, \
								pp.code AS parent_product, \
								so.referencedocumentnumber AS order_number, \
								sod.linenumber, \
								CASE \
									WHEN ppr.processsequencenumber IS NOT NULL THEN ppr.processsequencenumber \
									ELSE pr.sequencenumber \
								END AS sequence_number, \
								ws.code AS workstation, \
								wc.code AS workcentre, \
								schedule.scheduledquantity, \
								prod_status.producedquantity, \
								prod_status.rejectedquantity, \
								CONCAT(emp.firstname, ' ', emp.lastname) AS produced_by, \
								TRIM(ppr.instruction) As instruction, \
								orr.rejectedreasons, \
								prod_status.starttime, \
								prod_status.endprocesstime \
							FROM assembly.as_production_status prod_status \
							LEFT JOIN data.hr_employee emp ON emp.id = prod_status.createdby \
							LEFT JOIN assembly.as_pd_product cp ON cp.id = prod_status.product_id \
							LEFT JOIN assembly.as_production_schedule schedule ON schedule.id = prod_status.productionschedule_id \
							LEFT JOIN assembly.as_pd_product pp ON pp.id = schedule.parentproduct_id \
							LEFT JOIN assembly.as_pd_product_salesorderdetails sod ON sod.id = schedule.so_details_id \
							LEFT JOIN assembly.as_pd_product_salesorders so On so.id = sod.so_id \
							LEFT JOIN assembly.as_pd_product_productprocessroute ppr ON ppr.id = prod_status.processroute_id \
							LEFT JOIN assembly.as_pd_product_productroute pr On pr.id = ppr.productroute_id \
							LEFT JOIN data.wr_workcentre_workstation ws ON ws.id = prod_status.workstation_id \
							LEFT JOIN data.wr_workcentre wc ON wc.id = ws.wr_workcentre_id \
							LEFT JOIN ppc.operator_rejected_reasons orr ON orr.id = prod_status.rejectionreason \
							ORDER BY prod_status.starttime DESC \
							LIMIT 100;

workstationStatus = SELECT \
						cp.code AS child_product, \
						prod_status.revisionnumber AS child_revision, \
						pp.code AS parent_product, \
						so.referencedocumentnumber AS order_number, \
						sod.linenumber, \
						CASE \
							WHEN ppr.processsequencenumber IS NOT NULL THEN ppr.processsequencenumber \
							ELSE pr.sequencenumber \
						END AS sequence_number, \
						ws.code AS workstation, \
						wc.code AS workcentre, \
						schedule.scheduledquantity, \
						prod_status.producedquantity, \
						prod_status.rejectedquantity, \
						CONCAT(emp.firstname, ' ', emp.lastname) AS produced_by, \
						TRIM(ppr.instruction) As instruction, \
						orr.rejectedreasons, \
						prod_status.starttime, \
						prod_status.endprocesstime \
					FROM assembly.as_production_status prod_status \
					LEFT JOIN data.hr_employee emp ON emp.id = prod_status.createdby \
					LEFT JOIN assembly.as_pd_product cp ON cp.id = prod_status.product_id \
					LEFT JOIN assembly.as_production_schedule schedule ON schedule.id = prod_status.productionschedule_id \
					LEFT JOIN assembly.as_pd_product pp ON pp.id = schedule.parentproduct_id \
					LEFT JOIN assembly.as_pd_product_salesorderdetails sod ON sod.id = schedule.so_details_id \
					LEFT JOIN assembly.as_pd_product_salesorders so On so.id = sod.so_id \
					LEFT JOIN assembly.as_pd_product_productprocessroute ppr ON ppr.id = prod_status.processroute_id \
					LEFT JOIN assembly.as_pd_product_productroute pr On pr.id = ppr.productroute_id \
					LEFT JOIN data.wr_workcentre_workstation ws ON ws.id = prod_status.workstation_id \
					LEFT JOIN data.wr_workcentre wc ON wc.id = ws.wr_workcentre_id \
					LEFT JOIN ppc.operator_rejected_reasons orr ON orr.id = prod_status.rejectionreason \
					WHERE prod_status.workstation_id ='{workstation_id}' \
					ORDER BY prod_status.starttime DESC \
					LIMIT 100;

inspectedProductsListForStockInward = 	SELECT \
											ap.code AS product, \
											ap.revisionno AS product_revision, \
											ap.description AS product_description, \
											aps.producedquantity, \
											aps.product_id, \
											sch.parentproduct_id, \
											sch.so_details_id, \
											ap.uom_id, \
											aps.productionschedule_id \
										FROM assembly.as_production_status aps \
										LEFT JOIN assembly.as_pd_product_productprocessroute appr ON appr.id = aps.processroute_id \
										LEFT JOIN assembly.as_pd_product ap ON ap.id = aps.product_id \
										LEFT JOIN assembly.as_production_schedule sch On sch.id = aps.productionschedule_id \
										LEFT JOIN assembly.as_pd_product_stock stock ON stock.product_id = aps.product_id \
										LEFT JOIN assembly.as_pd_product_stockhistory stockhistory ON stockhistory.productstock_id = stock.id \
										WHERE appr.processsequencenumber = 900 AND (stockevent != 'Inward' ||  stock.id IS NULL)

										# SELECT \
										# 	ap.code AS product, \
										# 	ap.revisionno AS product_revision, \
										# 	ap.description AS product_description, \
										# 	aps.producedquantity, \
										# 	aps.product_id, \
										# 	sch.parentproduct_id, \
										# 	sch.so_details_id, \
										# 	ap.uom_id, \
										# 	aps.productionschedule_id \
										# FROM assembly.as_production_status aps \
										# LEFT JOIN assembly.as_pd_product_productprocessroute appr ON appr.id = aps.processroute_id \
										# LEFT JOIN assembly.as_pd_product ap ON ap.id = aps.product_id \
										# LEFT JOIN assembly.as_production_schedule sch On sch.id = aps.productionschedule_id \
										# JOIN assembly.as_pd_product_stock stock ON stock.product_id = aps.product_id \
										# JOIN assembly.as_pd_product_stockhistory stockhistory ON stockhistory.productstock_id = stock.id AND stockevent = 'Inward' \
										# WHERE appr.processsequencenumber = 900 



