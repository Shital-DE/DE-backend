insertDataQuery = INSERT INTO assembly.as_pd_product_structure( \
                deleted, version, updatedon, createdby, childproduct_id, parentproduct_id, level, quantity, reorderlevel, minimumorderqty, leadtime, revisionno \
                ) VALUES ( \
                false, 0, NOW(), '{createdby}', '{childproduct_id}', \
                CASE WHEN  '{parentproduct_id}' != 'Self' THEN '{parentproduct_id}' ELSE NULL END, \
                 {level},  \
                CASE WHEN  {qty} != 0 THEN {qty} ELSE 0 END, \
                CASE WHEN {reorderlevel} != 0 THEN {reorderlevel} ELSE 0 END, \
                CASE WHEN {minorderqty} != 0 THEN {minorderqty} ELSE 0 END, \
                CASE WHEN {leadtime} != 0 THEN {leadtime} ELSE 0 END, \
                '{revisionno}'); 

selectedProductStructure =  SELECT \
                        pps.level, \
                        lpp.code AS childpart, \
                        lpp.revisionno AS child_revision, \
                        lpp.description AS child_description, \
                        CASE \
                                        WHEN pps.parentproduct_id = 'self' THEN TRIM(pps.parentproduct_id) \
                                        ELSE TRIM(rpp.code) \
                        END AS parentpart, \
                        rpp.revisionno AS parent_revision, \
                        pt.name AS product_type, \
                        pps.quantity, \
                        pps.reorderlevel, \
                        pps.minimumorderqty, \
                        pps.leadtime, \
                        uom.name AS unit_of_measurement, \
                        pps.id, pps.deleted, pps.version, pps.updatedon, pps.createdby, pps.childproduct_id, newpps.childproduct_id AS parentproduct_id, lpp.producttype AS producttypeId, lpp.uom_id \
                        FROM assembly.as_pd_product_structure pps \
                        LEFT JOIN assembly.as_pd_product_structure newpps ON (newpps.id= pps.parentproduct_id) \
                        LEFT JOIN assembly.as_pd_product lpp ON (lpp.id = pps.childproduct_id) \
                        LEFT JOIN assembly.as_pd_product rpp ON (rpp.id = newpps.childproduct_id) \
                        LEFT JOIN assembly.as_producttype pt ON (pt.id = lpp.producttype) \
                        LEFT JOIN data.cm_uom uom ON uom.id = lpp.uom_id \
                        WHERE pps.childproduct_id = '{childproduct_id}' AND pps.revisionno = '{revisionno}' AND pt.id IS NOT NULL AND pps.level = 0; \

selectedProductStructureById =  SELECT \
                                pps.level, \
                                lpp.code AS childpart, \
                                lpp.revisionno AS child_revision, \
                                lpp.description AS child_description, \
                                CASE \
                                        WHEN pps.parentproduct_id = 'self' THEN TRIM(pps.parentproduct_id) \
                                        ELSE TRIM(rpp.code) \
                                END AS parentpart, \
                                rpp.revisionno AS parent_revision, \
                                pt.name AS product_type, \
                                pps.quantity, \
                                pps.reorderlevel, \
                                pps.minimumorderqty, \
                                pps.leadtime, \
                                uom.name AS unit_of_measurement, \
                                pps.id, pps.deleted, pps.version, pps.updatedon, pps.createdby, pps.childproduct_id, newpps.childproduct_id AS parentproduct_id, pt.id AS producttypeId, lpp.uom_id \
                                FROM assembly.as_pd_product_structure pps \
                                LEFT JOIN assembly.as_pd_product_structure newpps ON (newpps.id= pps.parentproduct_id) \
                                LEFT JOIN assembly.as_pd_product lpp ON (lpp.id = pps.childproduct_id) \
                                LEFT JOIN assembly.as_pd_product rpp ON (rpp.id = newpps.childproduct_id) \
                                LEFT JOIN assembly.as_producttype pt ON (pt.id = lpp.producttype) \
                                LEFT JOIN data.cm_uom uom ON uom.id = lpp.uom_id \
                                WHERE pps.id = '{id}'

productChildsWithParent = SELECT TRIM(app.code) AS product, TRIM(app.revisionno) AS revision, TRIM(app.description) AS description, newpps.id, pt.name AS producttype \
        FROM assembly.as_pd_product_structure pps \
        INNER JOIN assembly.as_pd_product_structure newpps ON newpps.parentproduct_id = pps.id \
        LEFT JOIN assembly.as_pd_product app ON (app.id = newpps.childproduct_id) \
        LEFT JOIN assembly.as_producttype pt ON (pt.id = app.producttype) \
        WHERE pps.childproduct_id ='{childproduct_id}' AND pps.level= {level} AND newpps.parentproduct_id = '{parentproduct_id}'

productChilds = SELECT TRIM(app.code) AS product, TRIM(app.revisionno) AS revision, TRIM(app.description) AS description, newpps.id, pt.name AS producttype \
        FROM assembly.as_pd_product_structure pps \
        INNER JOIN assembly.as_pd_product_structure newpps ON newpps.parentproduct_id = pps.id \
        LEFT JOIN assembly.as_pd_product app ON (app.id = newpps.childproduct_id) \
        LEFT JOIN assembly.as_producttype pt ON (pt.id = app.producttype) \
        WHERE pps.childproduct_id ='{childproduct_id}' AND pps.level= {level}

deleteData =    DELETE FROM assembly.as_pd_product_structure WHERE id='{id}';

productStructurePresentation =  DO $$ \
                                DECLARE \
                                final_product_structure jsonb; \
                                BEGIN \
                                WITH RECURSIVE product_hierarchy AS ( \
                                        SELECT DISTINCT ON (TRIM(pps.id)) \
                                        jsonb_build_object( \
                                                'stru_table_id', TRIM(pps.id), \
                                                'child_id', TRIM(pp.id), \
                                                'code', TRIM(pp.code), \
                                                'level', pps.level, \
                                                'parentproduct_id', TRIM(pps.parentproduct_id), \
                                                'revision_number', TRIM(pps.revisionno), \
                                                'updatedon', pps.updatedon, \
                                                'producttypeid', pp.producttype, \
                                                'children', '[]'::jsonb \
                                        ) AS product_structure \
                                        FROM assembly.as_pd_product_structure pps \
                                        LEFT JOIN assembly.as_pd_product pp ON pp.id = pps.childproduct_id \
                                        WHERE pps.childproduct_id = '{childproduct_id}' AND pps.revisionno = '{revision_number}' AND pps.level = 0 \
                                        UNION ALL \
                                        SELECT DISTINCT ON (TRIM(pps.id)) \
                                        jsonb_build_object( \
                                                'stru_table_id', TRIM(pps.id), \
                                                'child_id', TRIM(pp.id), \
                                                'code', TRIM(pp.code), \
                                                'level', pps.level, \
                                                'parentproduct_id', TRIM(pps.parentproduct_id), \
                                                'revision_number', TRIM(pps.revisionno), \
                                                'updatedon', pps.updatedon, \
                                                'producttypeid', pp.producttype, \
                                                'children', '[]'::jsonb \
                                        ) \
                                        FROM assembly.as_pd_product_structure pps \
                                        LEFT JOIN assembly.as_pd_product pp ON pp.id = pps.childproduct_id \
                                        INNER JOIN product_hierarchy ph ON pps.parentproduct_id = (ph.product_structure->>'stru_table_id') \
                                                WHERE pps.level > (ph.product_structure->>'level')::int \
                                ) \
                                SELECT jsonb_agg(product_structure ORDER BY (product_structure->>'level')::int) INTO final_product_structure FROM (SELECT DISTINCT product_structure FROM product_hierarchy) AS subquery; \
                                RAISE EXCEPTION '%', final_product_structure; \
                                END $$;

updateStructure = UPDATE assembly.as_pd_product_structure \
                SET version = version + 1, quantity={qty}, reorderlevel={reorderlevel}, minimumorderqty={minorderqty}, \
                leadtime={leadtime} \
                WHERE id='{id}'

hardwarelist =  SELECT id, code, description, producttype \
                FROM assembly.as_pd_product \
                WHERE producttype = '1c33293d584a44f6a2631f24d82cab81' \

consuambles =   SELECT id, code, description, producttype \
                FROM assembly.as_pd_product \
                WHERE producttype = '21e2f2e460a04cf2985b8cf5f787b5bb' \

