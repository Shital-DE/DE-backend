productRoute =  WITH RECURSIVE product_hierarchy AS ( \
                SELECT DISTINCT ON (TRIM(pps.id)) \
                    TRIM(cp.code) AS child_product, \
                    TRIM(cp.revisionno) AS child_revision_number, \
                    pps.level, \
                    TRIM(pp.code) AS parent_product, \
                    TRIM(pp.revisionno) AS parent_revision_number, \
                    TRIM(pps.id) AS stru_table_id, \
                    TRIM(cp.id) AS child_product_id, \
                    TRIM(ppps.childproduct_id) AS parentproduct_id, \
                    (SELECT json_agg( \
                        json_build_object( \
                            'combined_sequence', subquery.combined_sequence::INTEGER, \
                            'workcentre', COALESCE(TRIM(subquery.workcentre), ''), \
                            'workstation', COALESCE(TRIM(subquery.workstation), ''), \
                            'process', COALESCE(TRIM(subquery.process), ''), \
                            'instruction', COALESCE(TRIM(subquery.instruction), ''), \
                            'setuptimemins', COALESCE(subquery.setuptimemins::text, '0'), \
                            'runtimemins', COALESCE(subquery.runtimemins::text, '0'), \
                            'product_route_id', COALESCE(subquery.product_route_id, ''), \
                            'process_route_id', COALESCE(subquery.process_route_id, ''), \
                            'workcentre_id', COALESCE(subquery.workcentre_id, ''), \
                            'workstation_id', COALESCE(subquery.workstation_id, ''), \
                            'process_id', COALESCE(subquery.process_id, ''), \
                            'is_button', CASE WHEN subquery.combined_sequence < 800 THEN 'true' ELSE 'false' END, \
                            'product_route_seq', COALESCE(subquery.product_route_seq::text, '0'), \
                            'process_route_seq', COALESCE(subquery.process_route_seq::text, '0') \
                        ) \
                    ) \
                    FROM ( \
                        SELECT \
                            CASE \
                                WHEN ppr.processsequencenumber IS NOT NULL THEN ppr.processsequencenumber \
                                ELSE pr.sequencenumber \
                            END AS combined_sequence, \
                            wc.code AS workcentre, \
                            ws.code AS workstation, \
                            cc.code AS process, \
                            ppr.instruction, \
                            ppr.setuptimemins, \
                            ppr.runtimemins, \
                            pr.id AS product_route_id, \
                            ppr.id AS process_route_id, \
                            pr.workcentre_id, \
                            ppr.workstation_id, \
                            ppr.process_id, \
                            pr.sequencenumber AS product_route_seq, \
                            ppr.processsequencenumber AS process_route_seq \
                        FROM assembly.as_pd_product_productroute pr \
                        LEFT JOIN assembly.as_pd_product_productprocessroute ppr ON ppr.productroute_id = pr.id \
                        JOIN data.wr_workcentre wc ON wc.id = pr.workcentre_id \
                        LEFT JOIN data.wr_workcentre_workstation ws ON ws.id = ppr.workstation_id \
                        LEFT JOIN data.cc_process cc ON cc.id = ppr.process_id \
                        WHERE pr.product_id = cp.id \
                        AND pr.revision_number = cp.revisionno \
                        ORDER BY combined_sequence, pr.sequencenumber, ppr.processsequencenumber ASC \
                    ) AS subquery ) AS product_route \
                FROM assembly.as_pd_product_structure pps \
                LEFT JOIN assembly.as_pd_product cp ON cp.id = pps.childproduct_id \
                LEFT JOIN assembly.as_pd_product_structure ppps ON ppps.id = pps.parentproduct_id \
                LEFT JOIN assembly.as_pd_product pp ON pp.id = ppps.childproduct_id \
                WHERE pps.childproduct_id = '{product_id}' AND pps.revisionno = '{revisionno}' AND pps.level = 0 \
                UNION ALL \
                SELECT DISTINCT ON (TRIM(pps.id)) \
                    TRIM(cp.code) AS child_product, \
                    TRIM(cp.revisionno) AS child_revision_number, \
                    pps.level, \
                    TRIM(pp.code) AS parent_product, \
                    TRIM(pp.revisionno) AS parent_revision_number, \
                    TRIM(pps.id) AS stru_table_id, \
                    TRIM(cp.id) AS child_product_id, \
                    TRIM(ppps.childproduct_id) AS parentproduct_id, \
                    (SELECT json_agg( \
                        json_build_object( \
                            'combined_sequence', subquery.combined_sequence::INTEGER, \
                            'workcentre', COALESCE(TRIM(subquery.workcentre), ''), \
                            'workstation', COALESCE(TRIM(subquery.workstation), ''), \
                            'process', COALESCE(TRIM(subquery.process), ''), \
                            'instruction', COALESCE(TRIM(subquery.instruction), ''), \
                            'setuptimemins', COALESCE(subquery.setuptimemins::text, '0'), \
                            'runtimemins', COALESCE(subquery.runtimemins::text, '0'), \
                            'product_route_id', COALESCE(subquery.product_route_id, ''), \
                            'process_route_id', COALESCE(subquery.process_route_id, ''), \
                            'workcentre_id', COALESCE(subquery.workcentre_id, ''), \
                            'workstation_id', COALESCE(subquery.workstation_id, ''), \
                            'process_id', COALESCE(subquery.process_id, ''), \
                            'is_button', CASE WHEN subquery.process_route_id IS NOT NULL THEN 'true' ELSE 'false' END, \
                            'product_route_seq', COALESCE(subquery.product_route_seq::text, '0'), \
                            'process_route_seq', COALESCE(subquery.process_route_seq::text, '0') \
                        ) \
                    ) \
                    FROM ( \
                        SELECT \
                            CASE \
                                WHEN ppr.processsequencenumber IS NOT NULL THEN ppr.processsequencenumber \
                                ELSE pr.sequencenumber \
                            END AS combined_sequence, \
                            wc.code AS workcentre, \
                            ws.code AS workstation, \
                            cc.code AS process, \
                            ppr.instruction, \
                            ppr.setuptimemins, \
                            ppr.runtimemins, \
                            pr.id AS product_route_id, \
                            ppr.id AS process_route_id, \
                            pr.workcentre_id, \
                            ppr.workstation_id, \
                            ppr.process_id, \
                            pr.sequencenumber AS product_route_seq, \
                            ppr.processsequencenumber AS process_route_seq \
                        FROM assembly.as_pd_product_productroute pr \
                        LEFT JOIN assembly.as_pd_product_productprocessroute ppr ON ppr.productroute_id = pr.id \
                        JOIN data.wr_workcentre wc ON wc.id = pr.workcentre_id \
                        LEFT JOIN data.wr_workcentre_workstation ws ON ws.id = ppr.workstation_id \
                        LEFT JOIN data.cc_process cc ON cc.id = ppr.process_id \
                        WHERE pr.product_id = cp.id \
                        AND pr.revision_number = cp.revisionno \
                        ORDER BY combined_sequence, pr.sequencenumber, ppr.processsequencenumber ASC \
                    ) AS subquery ) AS product_route \
                FROM assembly.as_pd_product_structure pps \
                LEFT JOIN assembly.as_pd_product cp ON cp.id = pps.childproduct_id \
                LEFT JOIN assembly.as_pd_product_structure ppps ON ppps.id = pps.parentproduct_id \
                LEFT JOIN assembly.as_pd_product pp ON pp.id = ppps.childproduct_id \
                INNER JOIN product_hierarchy ph ON pps.parentproduct_id = ph.stru_table_id \
                WHERE pps.level > ph.level \
            ) \
            SELECT * FROM product_hierarchy \
            ORDER BY level, parent_product;

insertQuery =  DO $$ \
                DECLARE \
                    product_route_records assembly.as_pd_product_productroute%ROWTYPE; \
                    product_process_route_records assembly.as_pd_product_productprocessroute%ROWTYPE; \
                    new_pd_product_id VARCHAR := '{product_id}'; \
                    new_createdby VARCHAR := '{created_by}'; \
                    new_workcentre_id VARCHAR := '{workcentre_id}'; \
                    new_workstation_id VARCHAR := '{workstation_id}'; \
                    new_totalsetuptimemins INT := {setup_min}; \
                    new_totalruntimemins INT := {runtime_min}; \
                    new_revision_number VARCHAR := '{revision_number}'; \
                    new_sequencenumber INT := {sequencenumber}; \
                    description VARCHAR := '{description}'; \
                    new_process_id VARCHAR := '{new_process_id}'; \
                    top_bottom_data_aaray text[]:= ARRAY['{top_bottom_data_aaray0}','{top_bottom_data_aaray1}']; \
                    new_sequencenumber_list integer[] := ARRAY[new_sequencenumber, 800, 900, 1000]; \
                    new_workcentre_id_list text[] := ARRAY[new_workcentre_id, '4028817165f0a36c0165f0a89c410004', '4028817165f0a36c0165f0a9020e0005', '4028817165f0a36c0165f0a95e1c0006']; \
                    new_workstation_id_list text[] := ARRAY[new_workstation_id, '0ac3364c81e34f8db03e5385da0b0132']; \
                    new_totalsetuptimemins_list integer[] := ARRAY[new_totalsetuptimemins, 0, 0, 0]; \
                    new_totalruntimemins_list integer[] := ARRAY[new_totalruntimemins, 0, 0, 0]; \
                    process_route_id VARCHAR; \
                    product_route_id VARCHAR; \
                    product_route_sequence INT; \
                BEGIN \
                    IF (SELECT company_id FROM assembly.as_pd_product WHERE id = new_pd_product_id) = '211b6dd858274c40931aba34cea787b0' THEN \
                        new_workstation_id_list[3] := '3ad3c9bbd6e7471c98aa60824397f8f8'; \
                        new_workstation_id_list[4] := 'd75eb9d1d6f948c087efa4680f46a370'; \
                    ELSE \
                        new_workstation_id_list[3] := '04e60d14797645d09013efc0c7a7d753'; \
                        new_workstation_id_list[4] := '6d6969e4eaed49708bce0c3171aa346b'; \
                    END IF; \
                    IF new_process_id = '' THEN \
                        new_process_id := NULL; \
                    ELSE \
                        new_process_id := new_process_id; \
                    END IF; \
                    IF EXISTS ( \
                        SELECT 1 \
                        FROM assembly.as_pd_product_productroute \
                        WHERE product_id = new_pd_product_id AND revision_number = new_revision_number \
                    ) \
                    THEN \
                        SELECT * \
                        INTO product_route_records \
                        FROM assembly.as_pd_product_productroute \
                        WHERE workcentre_id = new_workcentre_id \
                        AND product_id = new_pd_product_id \
                        AND revision_number = new_revision_number \
                        LIMIT 1; \
                        IF product_route_records.workcentre_id = new_workcentre_id THEN \
                            SELECT * \
                            INTO product_process_route_records \
                            FROM assembly.as_pd_product_productprocessroute ppr \
                            JOIN assembly.as_pd_product_productroute pr ON pr.id = ppr.productroute_id \
                            WHERE product_id = new_pd_product_id and revision_number = new_revision_number \
                            ORDER BY ppr.updatedon DESC \
                            LIMIT 1; \
                            IF product_process_route_records.processsequencenumber = new_sequencenumber THEN \
                                RAISE EXCEPTION 'Already record inserted in assembly.as_pd_product_productprocessroute for sequence number %', new_sequencenumber; \
                            ELSE \
                                INSERT INTO assembly.as_pd_product_productprocessroute( \
                                createdby, productroute_id, process_id, setuptimemins, runtimemins, processsequencenumber, instruction, workstation_id) \
                                VALUES (new_createdby, product_route_records.id, new_process_id, new_totalsetuptimemins, new_totalruntimemins, new_sequencenumber, \
                                    description, new_workstation_id) \
                                RETURNING ID INTO process_route_id; \
                                IF process_route_id IS NOT NULL THEN \
                                    UPDATE assembly.as_pd_product_productroute \
                                    SET  totalsetuptimemins=product_route_records.totalsetuptimemins + new_totalsetuptimemins, \
                                    totalruntimemins=product_route_records.totalruntimemins + new_totalruntimemins \
                                    WHERE id = product_route_records.id; \
                                    RAISE NOTICE 'Record inserted successfully'; \
                                ELSE \
                                    RAISE EXCEPTION 'Process route id not returned'; \
                                END IF; \
                            END IF; \
                        ELSE \
                            IF top_bottom_data_aaray[1] = '' THEN \
                                product_route_sequence := new_sequencenumber; \
                            ELSE \
                                SELECT \
                                    CASE \
                                        WHEN (SELECT COUNT(DISTINCT id) FROM assembly.as_pd_product_productroute WHERE id = ANY(top_bottom_data_aaray)) = 1 \
                                        THEN (SELECT sequencenumber FROM assembly.as_pd_product_productroute WHERE id = ANY(top_bottom_data_aaray) LIMIT 1) + 5 \
                                        WHEN (SELECT MAX(sequencenumber) FROM assembly.as_pd_product_productroute WHERE id = ANY(top_bottom_data_aaray)) < 800 \
                                        THEN (SELECT SUM(sequencenumber) / 2 FROM assembly.as_pd_product_productroute WHERE id = ANY(top_bottom_data_aaray)) \
                                        ELSE (SELECT MIN(sequencenumber) + 10 FROM assembly.as_pd_product_productroute WHERE id = ANY(top_bottom_data_aaray)) \
                                    END AS result \
                                INTO product_route_sequence; \
                            END IF; \
                            SELECT * \
                            INTO product_route_records \
                            FROM assembly.as_pd_product_productroute \
                            WHERE sequencenumber = product_route_sequence AND product_id = new_pd_product_id AND revision_number = new_revision_number; \
                            IF  product_route_records.sequencenumber IS NOT NULL THEN \
                                product_route_sequence := product_route_sequence + 1; \
                            ELSE \
                                product_route_sequence := product_route_sequence; \
                            END IF; \
                            IF product_route_sequence IS NOT NULL THEN \
                                INSERT INTO assembly.as_pd_product_productroute( \
                                createdby, product_id, workcentre_id, sequencenumber, totalsetuptimemins, totalruntimemins, revision_number) \
                                VALUES (new_createdby, new_pd_product_id, new_workcentre_id, product_route_sequence, new_totalsetuptimemins, \
                                    new_totalruntimemins, new_revision_number) \
                                RETURNING ID INTO product_route_id; \
                                IF product_route_id IS NOT NULL THEN \
                                    INSERT INTO assembly.as_pd_product_productprocessroute( \
                                    createdby, productroute_id, process_id, setuptimemins, runtimemins, processsequencenumber, instruction, workstation_id) \
                                    VALUES (new_createdby, product_route_id, new_process_id, new_totalsetuptimemins, new_totalruntimemins, new_sequencenumber, \
                                            description, new_workstation_id) \
                                    RETURNING ID INTO process_route_id; \
                                    IF process_route_id IS NOT NULL THEN \
                                        RAISE NOTICE 'Record inserted successfully'; \
                                    ELSE \
                                        RAISE EXCEPTION 'Process route id not found'; \
                                    END IF; \
                                ELSE \
                                    RAISE EXCEPTION 'Product route id not found'; \
                                END IF; \
                            ELSE \
                                RAISE NOTICE 'Product route sequence not found'; \
                            END IF; \
                        END IF; \
                    ELSE \
                    FOR i IN 1..array_length(new_sequencenumber_list, 1) LOOP \
                        INSERT INTO assembly.as_pd_product_productroute( \
                        createdby, product_id, workcentre_id, sequencenumber, totalsetuptimemins, totalruntimemins, revision_number) \
                        VALUES (new_createdby, new_pd_product_id, new_workcentre_id_list[i], new_sequencenumber_list[i], new_totalsetuptimemins_list[i], \
                                new_totalruntimemins_list[i], new_revision_number) RETURNING ID INTO product_route_id; \
                        IF product_route_id IS NOT NULL THEN \
                            IF new_sequencenumber_list[i] = 10 THEN \
                                new_process_id := new_process_id; \
                                description := description; \
                            ELSE \
                                new_process_id := NULL; \
                                description := NULL; \
                            END IF; \
                            INSERT INTO assembly.as_pd_product_productprocessroute( \
                            createdby, productroute_id, process_id, setuptimemins, runtimemins, processsequencenumber, instruction, workstation_id) \
                            VALUES (new_createdby, product_route_id, new_process_id, new_totalsetuptimemins_list[i], new_totalruntimemins_list[i], new_sequencenumber_list[i], \
                                    description, new_workstation_id_list[i]); \
                        ELSE \
                            RAISE EXCEPTION 'Product route id found'; \
                        END IF; \
                    END LOOP; \
                    END IF; \
                END $$;
                 
                
                # DO $$ \
                # DECLARE \
                #     product_route_records assembly.as_pd_product_productroute%ROWTYPE; \
                #     product_process_route_records assembly.as_pd_product_productprocessroute%ROWTYPE; \
                #     new_pd_product_id VARCHAR := '{product_id}'; \
                #     new_createdby VARCHAR := '{created_by}'; \
                #     new_workcentre_id VARCHAR := '{workcentre_id}'; \
                #     new_workstation_id VARCHAR := '{workstation_id}'; \
                #     new_totalsetuptimemins INT := {setup_min}; \
                #     new_totalruntimemins INT := {runtime_min}; \
                #     new_revision_number VARCHAR := '{revision_number}'; \
                #     new_sequencenumber INT := {sequencenumber}; \
                #     description VARCHAR := '{description}'; \
                #     new_process_id VARCHAR := '{new_process_id}'; \
                #     top_bottom_data_aaray text[]:= ARRAY['{top_bottom_data_aaray0}','{top_bottom_data_aaray1}']; \
                #     new_sequencenumber_list integer[] := ARRAY[new_sequencenumber, 800, 900, 1000]; \
                #     new_workcentre_id_list text[] := ARRAY[new_workcentre_id, '4028817165f0a36c0165f0a89c410004', '4028817165f0a36c0165f0a9020e0005', '4028817165f0a36c0165f0a95e1c0006']; \
                #     new_totalsetuptimemins_list integer[] := ARRAY[new_totalsetuptimemins, 0, 0, 0]; \
                #     new_totalruntimemins_list integer[] := ARRAY[new_totalruntimemins, 0, 0, 0]; \
                #     process_route_id VARCHAR; \
                #     product_route_id VARCHAR; \
                #     product_route_sequence INT; \
                # BEGIN \
                #     IF new_process_id = '' THEN \
                #         new_process_id := NULL; \
                #     ELSE \
                #         new_process_id := new_process_id; \
                #     END IF; \
                #     IF EXISTS ( \
                #         SELECT 1 \
                #         FROM assembly.as_pd_product_productroute \
                #         WHERE product_id = new_pd_product_id AND revision_number = new_revision_number \
                #     ) \
                #     THEN \
                #         SELECT * \
                #         INTO product_route_records \
                #         FROM assembly.as_pd_product_productroute \
                #         WHERE workcentre_id = new_workcentre_id \
                #         AND product_id = new_pd_product_id \
                #         AND revision_number = new_revision_number \
                #         LIMIT 1; \
                #         IF product_route_records.workcentre_id = new_workcentre_id THEN \
                #             SELECT * \
                #             INTO product_process_route_records \
                #             FROM assembly.as_pd_product_productprocessroute ppr \
                #             JOIN assembly.as_pd_product_productroute pr ON pr.id = ppr.productroute_id \
                #             WHERE product_id = new_pd_product_id and revision_number = new_revision_number \
                #             ORDER BY ppr.updatedon DESC \
                #             LIMIT 1; \
                #             IF product_process_route_records.processsequencenumber = new_sequencenumber THEN \
                #                 RAISE EXCEPTION 'Already record inserted in assembly.as_pd_product_productprocessroute for sequence number %', new_sequencenumber; \
                #             ELSE \
                #                 INSERT INTO assembly.as_pd_product_productprocessroute( \
                #                 createdby, productroute_id, process_id, setuptimemins, runtimemins, processsequencenumber, instruction, workstation_id) \
                #                 VALUES (new_createdby, product_route_records.id, new_process_id, new_totalsetuptimemins, new_totalruntimemins, new_sequencenumber, \
                #                     description, new_workstation_id) \
                #                 RETURNING ID INTO process_route_id; \
                #                 IF process_route_id IS NOT NULL THEN \
                #                     UPDATE assembly.as_pd_product_productroute \
                #                     SET  totalsetuptimemins=product_route_records.totalsetuptimemins + new_totalsetuptimemins, \
                #                     totalruntimemins=product_route_records.totalruntimemins + new_totalruntimemins \
                #                     WHERE id = product_route_records.id; \
                #                     RAISE NOTICE 'Record inserted successfully'; \
                #                 ELSE \
                #                     RAISE EXCEPTION 'Process route id not returned'; \
                #                 END IF; \
                #             END IF; \
                #         ELSE \
                #             IF top_bottom_data_aaray[1] = '' THEN \
                #                 product_route_sequence := new_sequencenumber; \
                #             ELSE \
                #                 SELECT \
                #                     CASE \
                #                         WHEN (SELECT COUNT(DISTINCT id) FROM assembly.as_pd_product_productroute WHERE id = ANY(top_bottom_data_aaray)) = 1 \
                #                         THEN (SELECT sequencenumber FROM assembly.as_pd_product_productroute WHERE id = ANY(top_bottom_data_aaray) LIMIT 1) + 5 \
                #                         WHEN (SELECT MAX(sequencenumber) FROM assembly.as_pd_product_productroute WHERE id = ANY(top_bottom_data_aaray)) < 800 \
                #                         THEN (SELECT SUM(sequencenumber) / 2 FROM assembly.as_pd_product_productroute WHERE id = ANY(top_bottom_data_aaray)) \
                #                         ELSE (SELECT MIN(sequencenumber) + 10 FROM assembly.as_pd_product_productroute WHERE id = ANY(top_bottom_data_aaray)) \
                #                     END AS result \
                #                 INTO product_route_sequence; \
                #             END IF; \
                #             SELECT * \
                #             INTO product_route_records \
                #             FROM assembly.as_pd_product_productroute \
                #             WHERE sequencenumber = product_route_sequence AND product_id = new_pd_product_id AND revision_number = new_revision_number; \
                #             IF  product_route_records.sequencenumber IS NOT NULL THEN \
                #                 product_route_sequence := product_route_sequence + 1; \
                #             ELSE \
                #                 product_route_sequence := product_route_sequence; \
                #             END IF; \
                #             IF product_route_sequence IS NOT NULL THEN \
                #                 INSERT INTO assembly.as_pd_product_productroute( \
                #                 createdby, product_id, workcentre_id, sequencenumber, totalsetuptimemins, totalruntimemins, revision_number) \
                #                 VALUES (new_createdby, new_pd_product_id, new_workcentre_id, product_route_sequence, new_totalsetuptimemins, \
                #                     new_totalruntimemins, new_revision_number) \
                #                 RETURNING ID INTO product_route_id; \
                #                 IF product_route_id IS NOT NULL THEN \
                #                     INSERT INTO assembly.as_pd_product_productprocessroute( \
                #                     createdby, productroute_id, process_id, setuptimemins, runtimemins, processsequencenumber, instruction, workstation_id) \
                #                     VALUES (new_createdby, product_route_id, new_process_id, new_totalsetuptimemins, new_totalruntimemins, new_sequencenumber, \
                #                             description, new_workstation_id) \
                #                     RETURNING ID INTO process_route_id; \
                #                     IF process_route_id IS NOT NULL THEN \
                #                         RAISE NOTICE 'Record inserted successfully'; \
                #                     ELSE \
                #                         RAISE EXCEPTION 'Process route id not found'; \
                #                     END IF; \
                #                 ELSE \
                #                     RAISE EXCEPTION 'Product route id not found'; \
                #                 END IF; \
                #             ELSE \
                #                 RAISE NOTICE 'Product route sequence not found'; \
                #             END IF; \
                #         END IF; \
                #     ELSE \
                #     FOR i IN 1..array_length(new_sequencenumber_list, 1) LOOP \
                #             INSERT INTO assembly.as_pd_product_productroute( \
                #             createdby, product_id, workcentre_id, sequencenumber, totalsetuptimemins, totalruntimemins, revision_number) \
                #             VALUES (new_createdby, new_pd_product_id, new_workcentre_id_list[i], new_sequencenumber_list[i], new_totalsetuptimemins_list[i], \
                #                     new_totalruntimemins_list[i], new_revision_number); \
                #         END LOOP; \
                #         SELECT * \
                #         INTO product_route_records \
                #         FROM assembly.as_pd_product_productroute \
                #         WHERE product_id = new_pd_product_id \
                #         ORDER BY sequencenumber ASC \
                #         LIMIT 1; \
                #         IF product_route_records.id IS NOT NULL THEN \
                #             INSERT INTO assembly.as_pd_product_productprocessroute( \
                #             createdby, productroute_id, process_id, setuptimemins, runtimemins, processsequencenumber, instruction, workstation_id) \
                #             VALUES (new_createdby, product_route_records.id, new_process_id, new_totalsetuptimemins, new_totalruntimemins, new_sequencenumber, \
                #                     description, new_workstation_id); \
                #             RAISE NOTICE 'Record inserted successfully'; \
                #         ELSE \
                #             RAISE EXCEPTION 'Product route id found'; \
                #         END IF; \
                #     END IF; \
                # END $$;

updateQuery =   DO $$ \
                DECLARE \
                    product_route_records assembly.as_pd_product_productroute%ROWTYPE; \
                    new_product_route_records assembly.as_pd_product_productroute%ROWTYPE; \
                    product_route_id VARCHAR := '{product_route_id}'; \
                    process_route_id VARCHAR := '{process_route_id}'; \
                    new_product_id VARCHAR := '{new_product_id}'; \
                    product_revision VARCHAR := '{product_revision}'; \
                    new_sequence INT := {new_sequence}; \
                    new_workcentre_id VARCHAR := '{new_workcentre_id}'; \
                    new_workstation_id VARCHAR := '{new_workstation_id}'; \
                    new_createdby VARCHAR := '{new_createdby}'; \
                    new_totalsetuptimemins INT := {new_totalsetuptimemins}; \
                    new_totalruntimemins INT := {new_totalruntimemins}; \
                    existing_totalsetuptimemins INT := {existing_totalsetuptimemins}; \
                    existing_totalruntimemins INT := {existing_totalruntimemins}; \
                    new_description VARCHAR := '{new_description}'; \
                    new_process_id VARCHAR := '{new_process_id}'; \
                    response INT; \
                    product_route_return_id VARCHAR; \
                    deleted_product_route_count INT; \
                BEGIN \
                    IF new_process_id != '' THEN \
                        new_process_id :=new_process_id; \
                    ELSE \
                        new_process_id := NULL; \
                    END IF; \
                    IF new_sequence != 0 THEN \
                        UPDATE assembly.as_pd_product_productprocessroute \
                        SET processsequencenumber = new_sequence \
                        WHERE ID = process_route_id; \
                        GET DIAGNOSTICS response = ROW_COUNT; \
                        IF response > 0 THEN \
                            RAISE NOTICE 'Sequence updated successfully.'; \
                        ELSE \
                            RAISE NOTICE 'Record not updated.'; \
                        END IF; \
                    END IF; \
                    IF new_workcentre_id != '' AND new_workstation_id != '' THEN \
                        IF (SELECT COUNT(*) FROM assembly.as_pd_product_productprocessroute WHERE productroute_id = product_route_id) = 1 THEN \
                            SELECT * \
                            INTO product_route_records \
                            FROM assembly.as_pd_product_productroute \
                            WHERE workcentre_id = new_workcentre_id \
                            AND product_id = new_product_id \
                            AND revision_number = product_revision \
                            LIMIT 1; \
                            IF product_route_records.workcentre_id = new_workcentre_id THEN \
                                UPDATE assembly.as_pd_product_productprocessroute \
                                SET productroute_id = product_route_records.id, workstation_id = new_workstation_id, setuptimemins = new_totalsetuptimemins, \
                                runtimemins = new_totalruntimemins \
                                WHERE ID = process_route_id; \
                                GET DIAGNOSTICS response = ROW_COUNT; \
                                IF response > 0 THEN \
                                    UPDATE assembly.as_pd_product_productroute \
                                    SET totalsetuptimemins = product_route_records.totalsetuptimemins + new_totalsetuptimemins, \
                                    totalruntimemins = product_route_records.totalruntimemins + new_totalruntimemins \
                                    WHERE ID =  product_route_records.id; \
                                    GET DIAGNOSTICS response = ROW_COUNT; \
                                    IF response > 0 THEN \
                                        DELETE FROM assembly.as_pd_product_productroute \
                                        WHERE id = product_route_id \
                                        RETURNING 1 INTO deleted_product_route_count; \
                                        IF deleted_product_route_count = 1 THEN \
                                            RAISE NOTICE 'Record updated successfully'; \
                                        ELSE \
                                            RAISE EXCEPTION 'Record not deleted'; \
                                        END IF; \
                                    ELSE \
                                        RAISE NOTICE 'Record not updated.'; \
                                    END IF; \
                                ELSE \
                                    RAISE NOTICE 'Record not updated.'; \
                                END IF; \
                            ELSE \
                                UPDATE assembly.as_pd_product_productroute \
                                SET workcentre_id = new_workcentre_id, totalsetuptimemins = new_totalsetuptimemins, totalruntimemins = new_totalruntimemins \
                                WHERE ID = product_route_id; \
                                GET DIAGNOSTICS response = ROW_COUNT; \
                                IF response > 0 THEN \
                                    UPDATE assembly.as_pd_product_productprocessroute \
                                    SET workstation_id = new_workstation_id, setuptimemins = new_totalsetuptimemins, runtimemins = new_totalruntimemins \
                                    WHERE productroute_id = product_route_id; \
                                    GET DIAGNOSTICS response = ROW_COUNT; \
                                    IF response > 0 THEN \
                                        RAISE NOTICE 'One record found. Workcentre and workstation updated successfully'; \
                                    ELSE \
                                        RAISE NOTICE 'Record not updated.'; \
                                    END IF; \
                                ELSE \
                                    RAISE NOTICE 'Record not updated.'; \
                                END IF; \
                            END IF; \
                        ELSE \
                            SELECT * \
                            INTO product_route_records \
                            FROM assembly.as_pd_product_productroute \
                            WHERE workcentre_id = new_workcentre_id \
                            AND product_id = new_product_id \
                            AND revision_number = product_revision \
                            LIMIT 1; \
                            IF product_route_records.workcentre_id = new_workcentre_id THEN \
                                SELECT * \
                                INTO new_product_route_records \
                                FROM assembly.as_pd_product_productroute \
                                WHERE ID = product_route_id; \
                                IF new_product_route_records.id IS NOT NULL THEN \
                                    UPDATE assembly.as_pd_product_productroute \
                                    SET totalsetuptimemins = new_product_route_records.totalsetuptimemins - existing_totalsetuptimemins, \
                                    totalruntimemins = new_product_route_records.totalruntimemins - existing_totalruntimemins \
                                    WHERE ID = new_product_route_records.id; \
                                    GET DIAGNOSTICS response = ROW_COUNT; \
                                    IF response > 0 THEN \
                                        UPDATE assembly.as_pd_product_productprocessroute \
                                        SET productroute_id = product_route_records.id, workstation_id = new_workstation_id, \
                                        setuptimemins = new_totalsetuptimemins, runtimemins = new_totalruntimemins \
                                        WHERE ID = process_route_id; \
                                        GET DIAGNOSTICS response = ROW_COUNT; \
                                        IF response > 0 THEN \
                                            UPDATE assembly.as_pd_product_productroute \
                                            SET totalsetuptimemins = product_route_records.totalsetuptimemins + new_totalsetuptimemins, \
                                            totalruntimemins = product_route_records.totalruntimemins + new_totalruntimemins \
                                            WHERE ID = product_route_records.id; \
                                            GET DIAGNOSTICS response = ROW_COUNT; \
                                            IF response > 0 THEN \
                                                RAISE NOTICE 'Workcentre found. Workstation updated successfully'; \
                                            ELSE \
                                                RAISE NOTICE 'Record not updated'; \
                                            END IF; \
                                        ELSE \
                                            RAISE EXCEPTION 'Process route not updated'; \
                                        END IF; \
                                    ELSE \
                                        RAISE EXCEPTION 'Product route not updated'; \
                                    END IF; \
                                ELSE \
                                    RAISE EXCEPTION 'Product route not found'; \
                                END IF; \
                            ELSE \
                                SELECT * \
                                INTO product_route_records \
                                FROM assembly.as_pd_product_productroute \
                                WHERE ID = product_route_id; \
                                IF product_route_records.id IS NOT NULL THEN \
                                    UPDATE assembly.as_pd_product_productroute \
                                    SET totalsetuptimemins = product_route_records.totalsetuptimemins - existing_totalsetuptimemins, \
                                    totalruntimemins = product_route_records.totalruntimemins - existing_totalruntimemins \
                                    WHERE ID = product_route_records.id; \
                                    GET DIAGNOSTICS response = ROW_COUNT; \
                                    IF response > 0 THEN \
                                        SELECT * \
                                        INTO new_product_route_records \
                                        FROM ( \
                                        SELECT * \
                                        FROM assembly.as_pd_product_productroute \
                                        WHERE product_id = new_product_id \
                                            AND revision_number = product_revision \
                                        ORDER BY sequencenumber ASC \
                                        OFFSET (SELECT COUNT(*) - 4 FROM assembly.as_pd_product_productroute WHERE product_id = new_product_id AND revision_number = product_revision) \
                                        LIMIT 1 \
                                        ) AS subquery; \
                                        IF new_product_route_records.id IS NOT NULL THEN \
                                            INSERT INTO assembly.as_pd_product_productroute( \
                                            createdby, product_id, workcentre_id, sequencenumber, totalsetuptimemins, totalruntimemins, revision_number) \
                                            VALUES (new_createdby, new_product_id, new_workcentre_id, new_product_route_records.sequencenumber + 10, new_totalsetuptimemins, \
                                                new_totalruntimemins, product_revision) \
                                            RETURNING ID INTO product_route_return_id; \
                                            IF product_route_return_id IS NOT NULL THEN \
                                                UPDATE assembly.as_pd_product_productprocessroute \
                                                SET productroute_id = product_route_return_id, workstation_id = new_workstation_id, \
                                                setuptimemins = new_totalsetuptimemins, runtimemins = new_totalruntimemins \
                                                WHERE ID = process_route_id; \
                                                GET DIAGNOSTICS response = ROW_COUNT; \
                                                IF response > 0 THEN \
                                                    RAISE NOTICE 'Product and process route updated successfully'; \
                                                ELSE \
                                                    RAISE EXCEPTION 'Product and process route not updated'; \
                                                END IF; \
                                            ELSE \
                                                RAISE EXCEPTION 'Record not inserted'; \
                                            END IF; \
                                        ELSE \
                                            RAISE NOTICE 'Product route not found'; \
                                        END IF; \
                                    ELSE \
                                        RAISE EXCEPTION 'Product route not updated'; \
                                    END IF; \
                                ELSE \
                                    RAISE EXCEPTION 'Product route not found'; \
                                END IF; \
                            END IF; \
                        END IF; \
                    ELSIF new_workcentre_id = '' AND new_workstation_id != '' THEN \
                        UPDATE assembly.as_pd_product_productprocessroute \
                        SET workstation_id = new_workstation_id, setuptimemins = new_totalsetuptimemins , runtimemins = new_totalruntimemins \
                        WHERE id = process_route_id; \
                        GET DIAGNOSTICS response = ROW_COUNT; \
                        IF response > 0 THEN \
                            RAISE NOTICE 'Workstation updated successfully.'; \
                        ELSE \
                            RAISE NOTICE 'Record not updated.'; \
                        END IF; \
                    ELSIF new_workcentre_id = '' AND new_workstation_id = '' THEN \
                        SELECT * \
                        INTO product_route_records \
                        FROM assembly.as_pd_product_productroute \
                        WHERE ID = product_route_id; \
                        IF product_route_records.id IS NOT NULL THEN \
                            UPDATE assembly.as_pd_product_productroute \
                            SET totalsetuptimemins = product_route_records.totalsetuptimemins - existing_totalsetuptimemins, \
                            totalruntimemins = product_route_records.totalruntimemins - existing_totalruntimemins \
                            WHERE ID = product_route_records.id; \
                            GET DIAGNOSTICS response = ROW_COUNT; \
                            IF response > 0 THEN \
                                UPDATE assembly.as_pd_product_productprocessroute \
                                SET setuptimemins = new_totalsetuptimemins, runtimemins = new_totalruntimemins \
                                WHERE ID = process_route_id; \
                                GET DIAGNOSTICS response = ROW_COUNT; \
                                IF response > 0 THEN \
                                    SELECT * \
                                    INTO new_product_route_records \
                                    FROM assembly.as_pd_product_productroute \
                                    WHERE ID = product_route_records.id; \
                                    IF new_product_route_records.id IS NOT NULL THEN \
                                        UPDATE assembly.as_pd_product_productroute \
                                        SET totalsetuptimemins = new_product_route_records.totalsetuptimemins + new_totalsetuptimemins, \ \
                                        totalruntimemins = new_product_route_records.totalruntimemins + new_totalruntimemins \
                                        WHERE ID = new_product_route_records.id; \
                                        GET DIAGNOSTICS response = ROW_COUNT; \
                                        IF response > 0 THEN \
                                            RAISE NOTICE 'Runtime minutes and setup time minutes updated successfully.'; \
                                        ELSE \
                                            RAISE NOTICE 'Record not updated.'; \
                                        END IF; \
                                    ELSE \
                                        RAISE NOTICE 'Product route not found'; \
                                    END IF; \
                                ELSE \
                                    RAISE NOTICE 'Record not updated.'; \
                                END IF; \
                            ELSE \
                                RAISE NOTICE 'Record not updated.'; \
                            END IF; \
                        ELSE \
                            RAISE NOTICE 'Product route not found'; \
                        END IF; \
                    ELSE \
                        RAISE NOTICE 'Don''t update anything'; \
                    END IF; \
                    IF new_description != '' THEN \
                        UPDATE assembly.as_pd_product_productprocessroute \
                        SET instruction = new_description \
                        WHERE ID = process_route_id; \
                        GET DIAGNOSTICS response = ROW_COUNT; \
                        IF response > 0 THEN \
                            RAISE NOTICE 'Description updated successfully'; \
                        ELSE \
                            RAISE NOTICE 'Description not updated'; \
                        END IF; \
                    END IF; \
                    UPDATE assembly.as_pd_product_productprocessroute \
                    SET process_id =  new_process_id \
                    WHERE ID = process_route_id; \
                    GET DIAGNOSTICS response = ROW_COUNT; \
                    IF response > 0 THEN \
                        RAISE NOTICE 'Process updated successfully'; \
                    ELSE \
                        RAISE NOTICE 'Process not updated'; \
                    END IF; \
                END $$;

deleteQuery =   DO $$ \
                DECLARE \
                    product_route_records assembly.as_pd_product_productroute%ROWTYPE; \
                    product_route_id VARCHAR := '{product_route_id}'; \
                    process_route_id VARCHAR := '{process_route_id}'; \
                    setupmin INT := {setupmin}; \
                    runmin INT := {runmin}; \
                    deleted_process_route_count INT; \
                    deleted_product_route_count INT; \
                BEGIN \
                    CASE \
                        WHEN (SELECT COUNT(*) FROM assembly.as_pd_product_productprocessroute WHERE productroute_id = product_route_id) = 1 THEN \
                            DELETE FROM assembly.as_pd_product_productprocessroute \
                            WHERE id = process_route_id \
                            RETURNING 1 INTO deleted_process_route_count; \
                            IF deleted_process_route_count = 1 THEN \
                                DELETE FROM assembly.as_pd_product_productroute \
                                WHERE id = product_route_id \
                                RETURNING 1 INTO deleted_product_route_count; \
                                IF deleted_product_route_count = 1 THEN \
                                    RAISE NOTICE 'Record deleted successfully'; \
                                ELSE \
                                    RAISE NOTICE 'Record not found or not deleted'; \
                                END IF; \
                            ELSE \
                                RAISE NOTICE 'Record not found or not deleted'; \
                            END IF; \
                        ELSE \
                        DELETE FROM assembly.as_pd_product_productprocessroute \
                            WHERE id = process_route_id \
                            RETURNING 1 INTO deleted_process_route_count; \
                            IF deleted_process_route_count = 1 THEN \
                                SELECT * \
                                INTO product_route_records \
                                FROM assembly.as_pd_product_productroute \
                                WHERE id = product_route_id; \
                                IF product_route_records.id IS NOT NULL THEN \
                                    UPDATE assembly.as_pd_product_productroute \
                                    SET  totalsetuptimemins=product_route_records.totalsetuptimemins - setupmin, \
                                    totalruntimemins=product_route_records.totalruntimemins - runmin \
                                    WHERE id = product_route_id; \
                                    RAISE NOTICE 'Record deleted successfully'; \
                                ELSE \
                                    RAISE NOTICE 'Product route id not found'; \
                                END IF; \
                            ELSE \
                                RAISE NOTICE 'Record not found or not deleted'; \
                            END IF; \
                    END CASE; \
                END $$;

productRouteSelectQuery =   SELECT \
                                CASE \
                                    WHEN ppr.processsequencenumber IS NOT NULL THEN ppr.processsequencenumber \
                                    ELSE pr.sequencenumber \
                                END AS combined_sequence, \
                                wc.code AS workcentre, \
                                ws.code AS workstation, \
                                cc.code AS process, \
                                ppr.instruction, \
                                ppr.setuptimemins, \
                                ppr.runtimemins, \
                                pr.id AS product_route_id, \
                                ppr.id AS process_route_id, \
                                pr.workcentre_id, \
                                ppr.workstation_id, \
                                ppr.process_id, \
                                pr.sequencenumber AS product_route_seq, \
                                ppr.processsequencenumber AS process_route_seq \
                            FROM assembly.as_pd_product_productroute pr \
                            LEFT JOIN assembly.as_pd_product_productprocessroute ppr ON ppr.productroute_id = pr.id \
                            JOIN data.wr_workcentre wc ON wc.id = pr.workcentre_id \
                            LEFT JOIN data.wr_workcentre_workstation ws ON ws.id = ppr.workstation_id \
                            LEFT JOIN data.cc_process cc ON cc.id = ppr.process_id \
                            WHERE pr.product_id = '{product_id}' \
                            AND pr.revision_number = '{revision_number}' \
                            ORDER BY combined_sequence, pr.sequencenumber, ppr.processsequencenumber ASC 

singleProductProductionInstructions =   SELECT \
                                            appr.processsequencenumber AS sequencenumber, \
                                            TRIM(appr.instruction) AS instruction, \
                                            appr.setuptimemins, \
                                            appr.runtimemins, \
                                            apr.id AS product_route_id, \
                                            appr.id AS process_route_id, \
                                            apr.workcentre_id,aps.productionschedule_id, \
                                            CASE \
                                                WHEN aps.productionschedule_id IS NULL \
                                                THEN false \
                                                WHEN aps.productionschedule_id IS NOT NULL AND aps.endproductiontime IS NOT NULL \
                                                THEN true \
                                                ELSE false \
                                            END AS button_enable \
                                        FROM assembly.as_production_schedule sch \
                                        JOIN assembly.as_pd_product_productroute apr ON apr.product_id = sch.childproduct_id \
                                        JOIN assembly.as_pd_product_productprocessroute appr ON appr.productroute_id = apr.id AND appr.workstation_id = '{workstation_id}' \
                                        LEFT JOIN assembly.as_production_status aps ON aps.productionschedule_id = sch.id AND aps.processroute_id = appr.id \
                                        WHERE sch.id = '{schedule_id}' \
                                        GROUP BY appr.processsequencenumber, TRIM(appr.instruction), appr.setuptimemins, appr.runtimemins, apr.id, appr.id, apr.workcentre_id, \
                                        aps.processroute_id, aps.endproductiontime , aps.productionschedule_id \
                                        ORDER BY appr.processsequencenumber ASC



                                        # SELECT \
                                        #     appr.processsequencenumber AS sequencenumber, \
                                        #     TRIM(appr.instruction) AS instruction, \
                                        #     appr.setuptimemins, \
                                        #     appr.runtimemins, \
                                        #     apr.id AS product_route_id, \
                                        #     appr.id AS process_route_id, \
                                        #     apr.workcentre_id, \
                                        #     CASE \
                                        #         WHEN aps.processroute_id IS NOT NULL AND aps.endproductiontime IS NOT NULL \
                                        #         THEN true \
                                        #         ELSE false \
                                        #     END AS button_enable \
                                        # FROM assembly.as_pd_product_productroute apr \
                                        # JOIN assembly.as_pd_product_productprocessroute appr ON appr.productroute_id = apr.id AND appr.workstation_id = '{workstation_id}' \
                                        # LEFT JOIN assembly.as_production_status aps ON aps.processroute_id = appr.id \
                                        # WHERE apr.product_id = '{product_id}' AND revision_number = '{revision_number}' \
                                        # GROUP BY appr.processsequencenumber, TRIM(appr.instruction), appr.setuptimemins, appr.runtimemins, apr.id, appr.id, apr.workcentre_id, \
                                        # aps.processroute_id, aps.endproductiontime \
                                        # ORDER BY appr.processsequencenumber ASC
