generateCardNumber =    SELECT \
                            CASE \
                                WHEN MAX(CAST(SUBSTRING(cardnumber, 4) AS INTEGER)) IS NOT NULL THEN \
                                    CASE \
                                        WHEN MAX(CAST(SUBSTRING(cardnumber, 4) AS INTEGER)) < 9 THEN \
                                            CONCAT('DE-0', MAX(CAST(SUBSTRING(cardnumber, 4) AS INTEGER)) + 1) \
                                        ELSE \
                                            CONCAT('DE-', MAX(CAST(SUBSTRING(cardnumber, 4) AS INTEGER)) + 1) \
                                    END \
                                ELSE 'DE-01' \
                            END AS incremented_cardnumber \
                        FROM ppc.pd_product_instrumentcalibrationschedule \
                        WHERE instrument_id = '{instrument_id}';

purchaseOrder = SELECT CONCAT(po.document_number, '   ', DATE(po.updatedon)) AS purchaseOrder, po.id \
                FROM data.pur_inwardsupply_detail isd \
                LEFT JOIN data.pd_product pd ON pd.id = isd.product_id \
                LEFT JOIN data.pur_inwardsupply pis ON pis.id = isd.pur_inwardsupply_id \
                LEFT JOIN data.pur_purchaseorder po ON po.id = pis.purchaseorder_id \
                WHERE isd.product_id = '{product_id}' \
                ORDER BY isd.updatedon DESC; \

insertQuery =   INSERT INTO ppc.pd_product_instrumentcalibrationschedule( \
                updatedon, createdby, instrument_id, cardnumber, measuringrange, \
                startdate, duedate, frequency, barcodeinformation, purchaseorder_id, manufacturer_id) \
                VALUES (now(), '{createdby}', '{instrument_id}', '{cardnumber}', '{measuringrange}', '{startdate}', \
                '{duedate}', '{frequency}', \
                CASE WHEN '{barcodeinformation}' = '' THEN NULL ELSE '{barcodeinformation}' END, \
                CASE WHEN '{purchaseorder_id}' = '' THEN NULL ELSE '{purchaseorder_id}' END, '{manufacturer}') RETURNING id

updateCertificateId =   UPDATE ppc.pd_product_instrumentcalibrationschedule \
                        SET certificate_mdocid='{certificate_mdocid}' WHERE id='{id}';

currentDayRecords = SELECT pmi.instrumentname, it.description AS instrumenttype, ics.cardnumber,ics.measuringrange, \
                    ics.startdate, ics.duedate, cf.description AS frequency, po.document_number AS purchaseorder,ics.barcodeinformation, \
                    ics.id, ics.certificate_mdocid \
                    FROM ppc.pd_product_instrumentcalibrationschedule ics \
                    LEFT JOIN ppc.pd_product_measuringinstrument pmi ON pmi.id = ics.instrument_id \
                    LEFT JOIN data.cc_instrumenttype it ON it.id = pmi.instrumenttype_id \
                    LEFT JOIN ppc.cc_calibrationfrequency cf ON cf.id =  ics.frequency \
                    LEFT JOIN data.pur_purchaseorder po ON po.id = ics.purchaseorder_id \
                    WHERE DATE(ics.updatedon) = CURRENT_DATE AND ics.deleted = false  AND ics.version = 0\
                    ORDER BY ics.updatedon DESC

calibrationStatus = SELECT \
                        pmi.instrumentname, \
                        it.description AS instrumenttype, \
                        ics.cardnumber, \
                        ics.measuringrange, \
                        ics.startdate, \
                        ics.duedate, \
                        cf.description AS frequency, \
                        po.document_number AS purchaseorder, \
                        ics.barcodeinformation, \
                        ics.id, \
                        ics.certificate_mdocid, \
                        CASE \
                            WHEN CURRENT_DATE < TO_DATE(ics.duedate, 'YYYY-MM-DD') THEN \
                                CONCAT( \
                                    CASE WHEN EXTRACT(YEAR FROM AGE(TO_DATE(ics.duedate, 'YYYY-MM-DD'), CURRENT_DATE)) > 0 THEN \
                                        EXTRACT(YEAR FROM AGE(TO_DATE(ics.duedate, 'YYYY-MM-DD'), CURRENT_DATE)) || ' years ' ELSE '' \
                                    END, \
                                    CASE WHEN EXTRACT(MONTH FROM AGE(TO_DATE(ics.duedate, 'YYYY-MM-DD'), CURRENT_DATE)) > 0 THEN \
                                        EXTRACT(MONTH FROM AGE(TO_DATE(ics.duedate, 'YYYY-MM-DD'), CURRENT_DATE)) || ' months ' ELSE '' \
                                    END, \
                                    CASE WHEN EXTRACT(DAY FROM AGE(TO_DATE(ics.duedate, 'YYYY-MM-DD'), CURRENT_DATE)) > 0 THEN \
                                        EXTRACT(DAY FROM AGE(TO_DATE(ics.duedate, 'YYYY-MM-DD'), CURRENT_DATE)) || ' days' ELSE '' \
                                    END \
                                ) \
                            ELSE \
                                CONCAT( \
                                    '-', \
                                    CASE WHEN EXTRACT(YEAR FROM AGE(CURRENT_DATE, TO_DATE(ics.duedate, 'YYYY-MM-DD'))) > 0 THEN \
                                        EXTRACT(YEAR FROM AGE(CURRENT_DATE, TO_DATE(ics.duedate, 'YYYY-MM-DD'))) || ' years ' ELSE '' \
                                    END, \
                                    CASE WHEN EXTRACT(MONTH FROM AGE(CURRENT_DATE, TO_DATE(ics.duedate, 'YYYY-MM-DD'))) > 0 THEN \
                                        EXTRACT(MONTH FROM AGE(CURRENT_DATE, TO_DATE(ics.duedate, 'YYYY-MM-DD'))) || ' months ' ELSE '' \
                                    END, \
                                    CASE WHEN EXTRACT(DAY FROM AGE(CURRENT_DATE, TO_DATE(ics.duedate, 'YYYY-MM-DD'))) > 0 THEN \
                                        EXTRACT(DAY FROM AGE(CURRENT_DATE, TO_DATE(ics.duedate, 'YYYY-MM-DD'))) || ' days' ELSE '' \
                                    END \
                                ) \
                        END AS remaining_time_until_due, \
                        CASE \
                            WHEN TO_DATE(ics.duedate, 'YYYY-MM-DD') < CURRENT_DATE THEN -1 \
                            WHEN TO_DATE(ics.duedate, 'YYYY-MM-DD') <= CURRENT_DATE + INTERVAL '31 days' THEN 0 \
                            ELSE 1 \
                        END AS remaining_time_category, \
                    ics.frequency as frequencyid, \
                    instrument_id \
                    FROM ppc.pd_product_instrumentcalibrationschedule ics \
                    LEFT JOIN ppc.pd_product_measuringinstrument pmi ON pmi.id = ics.instrument_id \
                    LEFT JOIN data.cc_instrumenttype it ON it.id = pmi.instrumenttype_id \
                    LEFT JOIN ppc.cc_calibrationfrequency cf ON cf.id = ics.frequency \
                    LEFT JOIN data.pur_purchaseorder po ON po.id = ics.purchaseorder_id \
                    WHERE ics.deleted = false \
                    ORDER BY \
                        CASE \
                            WHEN CURRENT_DATE < TO_DATE(ics.duedate, 'YYYY-MM-DD') THEN 1 ELSE 0 \
                        END ASC, \
                        TO_DATE(ics.duedate, 'YYYY-MM-DD') - CURRENT_DATE ASC;

measuringrangeList =    SELECT DISTINCT measuringrange \
                        FROM ppc.pd_product_instrumentcalibrationschedule \
                        WHERE instrument_id = '{instrument_id}'

calibrationMonthReminder =  SELECT pmi.instrumentname, \
                                it.description AS instrumenttype, \
                                ics.cardnumber, \
                                ics.measuringrange, \
                                ics.startdate, \
                                ics.duedate, \
                                ics.id \
                            FROM ppc.pd_product_instrumentcalibrationschedule ics \
                            LEFT JOIN ppc.pd_product_measuringinstrument pmi ON pmi.id = ics.instrument_id \
                            LEFT JOIN data.cc_instrumenttype it ON it.id = pmi.instrumenttype_id \
                            WHERE ics.deleted = false AND ((TO_DATE(duedate, 'YYYY-MM-DD') BETWEEN CURRENT_DATE AND CURRENT_DATE + INTERVAL '31 days') \
                                OR (TO_DATE(duedate, 'YYYY-MM-DD') < CURRENT_DATE AND iscalibrate = false)) \
                            ORDER BY duedate DESC;

sendForCalibration = UPDATE ppc.pd_product_instrumentcalibrationschedule \
                    SET version=version+1, updatedon=now(), createdby='{createdby}', startdate='0000-00-00', duedate='0000-00-00', \
                    frequency='31eac610d95f4efcba9e1aeef8642d47', certificate_mdocid=NULL, iscalibrate=true WHERE id='{id}';

inwardSpacificInstrument =   UPDATE ppc.pd_product_instrumentcalibrationschedule \
                        SET startdate='{startdate}', duedate='{duedate}',  frequency='{frequency}', certificate_mdocid='{certificate_mdocid}', iscalibrate = false \
                        WHERE id='{id}';

spacificInstrumentCardNumber =  SELECT id, instrument_id, cardnumber \
                                FROM ppc.pd_product_instrumentcalibrationschedule \
                                WHERE instrument_id = '{instrument_id}';

oneInstrumentData = SELECT pmi.instrumentname, it.description AS instrumenttype, ics.cardnumber,ics.measuringrange, \
                    ics.startdate, ics.duedate, cf.description AS frequency, po.document_number AS purchaseorder,ics.barcodeinformation, \
                    ics.id AS scheduletable_id, ics.certificate_mdocid, im.manufacturer, pp.storagelocation \
                    FROM ppc.pd_product_instrumentcalibrationschedule ics \
                    LEFT JOIN ppc.pd_product_measuringinstrument pmi ON pmi.id = ics.instrument_id \
                    LEFT JOIN data.cc_instrumenttype it ON it.id = pmi.instrumenttype_id \
                    LEFT JOIN ppc.cc_calibrationfrequency cf ON cf.id =  ics.frequency \
                    LEFT JOIN data.pur_purchaseorder po ON po.id = ics.purchaseorder_id \
                    LEFT JOIN ppc.cc_instrumentmanufacturer im ON im.id = ics.manufacturer_id \
                    LEFT JOIN data.pd_product pp ON pp.id = pmi.product_id \
                    WHERE ics.instrument_id ='{instrument_id}' AND ics.id ='{id}' AND ics.deleted=false;
                    
deleteQuery =   UPDATE ppc.pd_product_instrumentcalibrationschedule SET deleted={isdeleted}, version = version + 1, updatedon = NOW() WHERE id='{id}';

instrumentrejectionresons = SELECT id,reason FROM ppc.pd_product_measuringinstrument_rejectionreasons;

cancelCalibration = UPDATE ppc.pd_product_instrumentcalibrationschedule \
                    SET updatedon=NOW(), version=version+1, createdby='{createdby}', startdate='{startdate}', duedate='{duedate}', frequency='{frequency}', iscalibrate=false, certificate_mdocid='{certificate_mdocid}' \
                    WHERE id = '{id}' RETURNING Id;

issueAndReclaimInstruments = UPDATE ppc.pd_product_instrumentcalibrationschedule SET isoutsourced = {isoutsourced} WHERE id = '{id}';

availableInstruments =  SELECT mi.instrumentname, cardnumber, measuringrange, it.description AS instrumenttype, startdate, duedate, frequency, certificate_mdocid, ics.id as instrumentschedule_id, instrument_id \
                        FROM ppc.pd_product_instrumentcalibrationschedule ics \
                        LEFT JOIN ppc.pd_product_measuringinstrument mi ON mi.id = instrument_id \
                        LEFT JOIN data.cc_instrumenttype it ON it.id = mi.instrumenttype_id \
                        WHERE isoutsourced = false AND ics.deleted = false AND iscalibrate = false \
                        ORDER BY instrumentname ASC, cardnumber ASC
             
reclaimOutsourcedInstruments =  SELECT \
                                    pmi.instrumentname, \
                                    it.description AS instrumenttype, \
                                    cardnumber, \
                                    measuringrange, \
                                    startdate, duedate, \
                                    cf.description AS frequency, \
                                    ics.id as instrumentcalibrationschedule_id, \
                                    instrument_id, \
                                    ics.frequency AS frequency_id, \
                                    certificate_mdocid \
                                FROM ppc.pd_product_instrumentcalibrationschedule ics \
                                LEFT JOIN ppc.pd_product_measuringinstrument pmi ON pmi.id = ics.instrument_id \
                                LEFT JOIN data.cc_instrumenttype it ON it.id = pmi.instrumenttype_id \
                                LEFT JOIN ppc.cc_calibrationfrequency cf ON cf.id = ics.frequency \
                                WHERE isoutsourced = true

