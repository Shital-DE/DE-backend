checkExistingAttendance = SELECT * FROM ppc.employeeattendance e \
                WHERE e.userid = '{userid}' \
                AND e.operation_type = '{operation_type}' AND e.temperature = '{temperature}' \
                AND e.input_type = '{input_type}' AND e.logtime = '{logtime}' \

insertAttendance = INSERT INTO ppc.employeeattendance( \
                  userid, operation_type, temperature, input_type, logtime) \
                  VALUES ('{userid}', '{operation_type}','{temperature}', '{input_type}', '{logtime}')

dataEmployee = SELECT userid, employee_name FROM ppc.employee \
                    WHERE userid = '{userid}'
 
employee_log = select \
    x.userid, \
    x.employee_name, \
    to_char(x.logtime, 'DD-MM-YYYY') as date, \
    to_char(x.logtime, 'Dy') as day, \
    max(case when operation_type = 'CheckIn' then to_char(logtime, 'HH24:MI:SS') else '' end) checkintime, \
    max(case when operation_type = 'CheckOut' then to_char(logtime, 'HH24:MI:SS') else '' end) checkouttime, \
    max(case when operation_type = 'CheckIn' then temperature else 0.0 end) checkintemperature, \
    max(case when operation_type = 'CheckOut' then temperature else 0.0 end) checkouttemperature \
from \
    (SELECT atten.id, atten.userid, e.employee_name, operationid, operation_type, \
        temperature, facemask, input_type, logtime, updatedon \
    FROM ppc.employeeattendance atten \
    join ppc.employee e on e.userid = atten.userid \
    where atten.userid = '{userid}') x \
where logtime::date between '{fromdate}' and '{todate}' \
group by userid, to_char(logtime, 'DD-MM-YYYY'), employee_name, day \
order by to_char(logtime, 'DD-MM-YYYY') desc

all_employee_dailylog = select \
	x.userid, \
	x.employee_name, \
	to_char(x.logtime, 'DD-MM-YYYY') as date, \
	to_char(x.logtime, 'Dy') as day, \
	max(case when operation_type = 'CheckIn' then to_char(logtime, 'HH24:MI:SS') else '' end) checkintime, \
	max(case when operation_type = 'CheckOut' then to_char(logtime, 'HH24:MI:SS') else '' end) checkouttime, \
	max(case when operation_type = 'CheckIn' then temperature else 0.0 end) checkintemperature, \
	max(case when operation_type = 'CheckOut' then temperature else 0.0 end) checkouttemperature \
from \
    (SELECT atten.id, atten.userid, e.employee_name, operationid, operation_type, \
	 temperature, facemask, input_type, logtime, updatedon \
    FROM ppc.employeeattendance atten \
    join ppc.employee e on e.userid = atten.userid \
    ) x \
where logtime::date = now()::date \
group by userid, to_char(logtime, 'DD-MM-YYYY'), employee_name, day \
order by to_char(logtime, 'DD-MM-YYYY')

employee_list = SELECT id, userid, employee_name, hr_employee_id \
	FROM ppc.employee \
	order by employee_name asc