insertQuery =   INSERT INTO ppc.pd_product_instrumentcalibration_history( \
                updatedon, createdby, instrumentcalibrationschedule_id, startdate, duedate, isrejected, reason, certificate_id, frequency) \
                VALUES (now(), '{createdby}', '{instrumentcalibrationschedule_id}', '{startdate}', '{duedate}', false, NULL, \
                CASE WHEN '{certificate_id}' = 'null' THEN NULL ELSE '{certificate_id}' END, \
                '{frequency}');

outwardInstruments = SELECT \
                    pmi.instrumentname, \
                    it.description AS instrumenttype, \
                    ics.cardnumber, \
                    ics.measuringrange, \
                    ch.startdate, \
                    ch.duedate, \
                    ch.instrumentcalibrationschedule_id, \
                    ch.id, \
                    ch.frequency, \
                    ch.certificate_id \
                    FROM ppc.pd_product_instrumentcalibrationschedule ics \
                    LEFT JOIN ppc.pd_product_measuringinstrument pmi ON pmi.id = ics.instrument_id \
                    LEFT JOIN data.cc_instrumenttype it ON it.id = pmi.instrumenttype_id \
                    LEFT JOIN ppc.pd_product_instrumentcalibration_history ch ON ch.instrumentcalibrationschedule_id = ics.id \
                    WHERE iscalibrate = true AND outsourceworkorder_id is NULL \
                    ORDER BY pmi.instrumentname, ics.cardnumber;

updateQuery =   UPDATE ppc.pd_product_instrumentcalibration_history \
                SET outsourceworkorder_id='{outsourceworkorder_id}' \
                WHERE id='{id}';

inwardInstruments = SELECT \
                    instrumentname, \
                    instrumenttype, \
                    cardnumber, \
                    measuringrange, \
                    instrumentcalibrationschedule_id, \
                    id \
                    FROM ( \
                    SELECT \
                        DISTINCT ON (pmi.instrumentname, it.description, ics.cardnumber, ics.measuringrange, ch.instrumentcalibrationschedule_id) \
                        pmi.instrumentname, \
                        it.description AS instrumenttype, \
                        ics.cardnumber, \
                        ics.measuringrange, \
                        ch.instrumentcalibrationschedule_id, \
                        ch.id, \
                        ch.outsourceworkorder_id \
                    FROM ppc.pd_product_instrumentcalibrationschedule ics \
                    LEFT JOIN ppc.pd_product_measuringinstrument pmi ON pmi.id = ics.instrument_id \
                    LEFT JOIN data.cc_instrumenttype it ON it.id = pmi.instrumenttype_id \
                    LEFT JOIN ppc.pd_product_instrumentcalibration_history ch ON ch.instrumentcalibrationschedule_id = ics.id \
                    WHERE iscalibrate = true \
                    ORDER BY pmi.instrumentname, it.description, ics.cardnumber, ics.measuringrange, ch.instrumentcalibrationschedule_id, ch.updatedon DESC \
                    ) AS subquery \
                    WHERE subquery.outsourceworkorder_id IS NOT NULL;

allChallans =   SELECT DISTINCT \
                ow.outwardchallan_no AS challanno, \
                ow.outsource_date, \
                con.name AS contractor, \
                con.address1, \
                CONCAT(hr.firstname,'  ', hr.lastname) AS outsourcedby, \
                pih.outsourceworkorder_id \
                FROM ppc.pd_product_instrumentcalibration_history pih \
                JOIN ppc.outsourceworkorder ow ON ow.id = pih.outsourceworkorder_id \
                JOIN ppc.subcontractor con ON con.id = ow.subcontractor_id \
                JOIN data.hr_employee hr ON hr.id = ow.createdby \
                ORDER BY ow.outwardchallan_no DESC;

oneChallanData = SELECT pmi.instrumentname, \
                it.description AS instrumenttype, \
                pic.cardnumber, \
                pic.measuringrange, \
                hr.firstname || ' ' || hr.lastname AS employee_name, \
                instrumentcalibrationschedule_id, \
                pih.id \
                FROM ppc.pd_product_instrumentcalibration_history pih \
                JOIN ppc.pd_product_instrumentcalibrationschedule pic ON pic.id = pih.instrumentcalibrationschedule_id \
                LEFT JOIN ppc.pd_product_measuringinstrument pmi ON pmi.id = pic.instrument_id \
                LEFT JOIN data.cc_instrumenttype it ON it.id = pmi.instrumenttype_id \
                LEFT JOIN data.hr_employee hr ON hr.id = pih.createdby \
                WHERE outsourceworkorder_id = '{outsourceworkorder_id}';

oneInstrumentHistory =  SELECT \
                            pmi.instrumentname, \
                            it.description AS instrumenttype, \
                            pic.cardnumber, \
                            pic.measuringrange, \
                            pih.startdate, \
                            pih.duedate, \
                            cf.description AS frequency, \
                            po.document_number AS purchaseorder, \
                            pic.barcodeinformation, \
                            pic.id AS scheduletable_id, \
                            pih.certificate_id AS certificate_mdocid, \
                            irr.reason AS rejectionreason, \
                            pih.updatedon AS rejectiondate, \
                            CONCAT(hr.firstname, ' ', hr.lastname) AS rejectedby, \
                            im.manufacturer, \
                            pp.storagelocation, \
                            pih.instrumentcalibrationschedule_id AS historytable_id \
                        FROM ppc.pd_product_instrumentcalibration_history pih \
                        LEFT JOIN ppc.pd_product_instrumentcalibrationschedule pic ON pic.id = pih.instrumentcalibrationschedule_id \
                        LEFT JOIN ppc.pd_product_measuringinstrument pmi ON pmi.id = pic.instrument_id \
                        LEFT JOIN data.cc_instrumenttype it ON it.id = pmi.instrumenttype_id \
                        LEFT JOIN ppc.cc_calibrationfrequency cf ON cf.id = pic.frequency \
                        LEFT JOIN data.pur_purchaseorder po ON po.id = pic.purchaseorder_id \
                        LEFT JOIN ppc.pd_product_measuringinstrument_rejectionreasons irr ON irr.id = pih.reason \
                        JOIN data.hr_employee hr ON hr.id = pih.createdby \
                        LEFT JOIN ppc.cc_instrumentmanufacturer im ON im.id = pic.manufacturer_id \
                        LEFT JOIN data.pd_product pp ON pp.id = pmi.product_id \
                        WHERE pic.instrument_id ='{instrument_id}' AND pic.id ='{id}' AND (pih.reason IS NULL OR pih.reason != '81180939c054478587d54fab54f585fd') \
                        ORDER BY pih.startdate DESC; \

isReminded =    DO $$ \
                DECLARE \
                    record_exists BOOLEAN; \
                BEGIN \
                    SELECT EXISTS ( \
                        SELECT 1 \
                        FROM ppc.mail_history \
                        WHERE updatedon::date = CURRENT_DATE \
                        AND description = 'Calibration - Monthly reminder' \
                    ) INTO record_exists; \
                    IF record_exists THEN \
                        RAISE EXCEPTION 'Do not send mail.'; \
                    ELSE \
                        RAISE EXCEPTION 'Send mail.'; \
                    END IF; \
                END $$;
                
           
rejectedInstrumentsRegistration =    INSERT INTO ppc.pd_product_instrumentcalibration_history( \
                        updatedon, createdby, instrumentcalibrationschedule_id, startdate, duedate, isrejected, reason, certificate_id) \
                        VALUES (now(), '{createdby}', '{instrumentcalibrationschedule_id}', \
                        CASE \
                            WHEN '{startdate}' = 'null' THEN NULL \
                            ELSE '{startdate}' \
                        END, \
                        CASE \
                            WHEN '{duedate}' = 'null' THEN NULL \
                            ELSE  '{duedate}' \
                        END, \
                        {isdeleted}, \
                        '{rejectionreason}', \
                         CASE \
                            WHEN '{certificate_id}' = 'null' THEN NULL \
                            ELSE  '{certificate_id}' \
                        END \
                        );

rejectedInstrumentsDataQuery =  SELECT \
                                    TRIM(instrumentname) AS instrumentname, \
                                    TRIM(cardnumber) AS cardnumber, \
                                    TRIM(measuringrange) AS measuringrange, \
                                    DATE(ich.updatedon) AS rejected_date, \
                                    CONCAT(e.firstname, ' ', e.lastname) AS rejectedby, \
                                    TRIM(irr.reason) AS rejection_reason, \
                                    ich.id as history_id, \
                                    instrumentcalibrationschedule_id, \
                                    instrument_id, \
                                    CASE \
                                        WHEN certificate_id IS NULL \
                                        THEN certificate_mdocid \
                                        ELSE certificate_id \
                                    END \
                                FROM ppc.pd_product_instrumentcalibration_history ich \
                                JOIN ppc.pd_product_instrumentcalibrationschedule ics ON ics.id = instrumentcalibrationschedule_id \
                                JOIN ppc.pd_product_measuringinstrument mi ON mi.id = instrument_id \
                                JOIN data.hr_employee e ON e.id = ich.createdby \
                                JOIN ppc.pd_product_measuringinstrument_rejectionreasons irr ON irr.id = ich.reason \
                                WHERE ich.isrejected = true AND ich.reason IS NOT NULL \
                                ORDER BY ich.updatedon DESC

rejectedInstrumentsDataForNewOrder =    SELECT mi.id AS instrument_id,ics.id as instrumentschedule_id, mi.instrumentname, ics.cardnumber, ics.measuringrange, \
                                        mi.description, pp.code as product, pp.description as productDescription \
                                        FROM ppc.pd_product_instrumentcalibration_history ich \
                                        JOIN ppc.pd_product_instrumentcalibrationschedule ics ON ics.id= ich.instrumentcalibrationschedule_id \
                                        JOIN ppc.pd_product_measuringinstrument mi ON mi.id = ics.instrument_id \
                                        JOIN data.pd_product pp ON pp.id = mi.product_id \
                                        WHERE isrejected = true

storedInstruments = SELECT mi.instrumentname, it.description AS instrumenttype, ics.cardnumber, ics.measuringrange, ics.startdate, ics.duedate, \
                    im.manufacturer, pp.storagelocation, CONCAT(hr.firstname, ' ', hr.lastname) AS storedby, ich.updatedon AS storedon, \
                    ich.id, ich.instrumentcalibrationschedule_id, certificate_mdocid \
                    FROM ppc.pd_product_instrumentcalibration_history ich \
                    LEFT JOIN ppc.pd_product_instrumentcalibrationschedule ics ON ics.id = ich.instrumentcalibrationschedule_id \
                    LEFT JOIN ppc.pd_product_measuringinstrument mi ON mi.id = ics.instrument_id \
                    LEFT JOIN data.cc_instrumenttype it ON it.id = mi.instrumenttype_id \
                    LEFT JOIN ppc.cc_instrumentmanufacturer im ON im.id = ics.manufacturer_id \
                    LEFT JOIN data.pd_product pp ON pp.id = mi.product_id \
                    LEFT JOIN data.hr_employee hr ON hr.id = ich.createdby \
                    WHERE reason ='81180939c054478587d54fab54f585fd'

deleteQuery = DELETE FROM ppc.pd_product_instrumentcalibration_history WHERE id='{id}'