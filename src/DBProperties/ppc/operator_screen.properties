
pendingproductlist = SELECT cpe.id,cpe.runnumber,cpe.capacityplan_child_id,CONCAT(TRIM(pp.code), TRIM(cpe.revision_no)) AS product,cpe.pd_product_id, cpe.revision_no, \
                     cpe.lineitemno,cpe.ss_salesorder_id, rms.referancedocumentnumber,rms.id as rmsid, cpe.quantity as tobeproducedqty \
                    FROM ppc.pd_product_capacityplan_execution cpe \
                    join data.pd_product pp on(pp.id =cpe.pd_product_id) \
                    join data.rms_rawmaterialissue rms on(rms.product_id=cpe.pd_product_id) and (rms.salesorder_id= cpe.ss_salesorder_id) \
                    where wr_workcentre_id = '{workcentre_id}' and \
                    (cpe.ss_salesorder_id,cpe.pd_product_id,cpe.lineitemno) not in \
					(SELECT os.ss_salesorder_id, product_id, lineitemnumber \
				    FROM data.ss_outwardsupply_detail osd \
					join data.ss_outwardsupply os on os.id = osd.ss_outwardsupply_id)

productlistfromcp = SELECT cpe.id,cpe.runnumber,cpe.capacityplan_child_id, \
                    CONCAT(TRIM(pp.code), TRIM(cpe.revision_no)) AS product, \
                    cpe.pd_product_id, \
                    cpe.revision_no, \
                    cpe.lineitemno, \
                    cpe.ss_salesorder_id, \
                    rms.referancedocumentnumber as ponumber, \
                    rms.id as rmsid, \
                    cpe.quantity as tobeproducedqty \
                    FROM ppc.pd_product_capacityplan_execution cpe \
                    join data.pd_product pp on(pp.id =cpe.pd_product_id) \
                    join data.rms_rawmaterialissue rms on(rms.product_id=cpe.pd_product_id) and (rms.salesorder_id= cpe.ss_salesorder_id) \
                    where cpe.wr_workcentre_id= '{workcentre_id}' AND cpe.pd_product_id= '{product_id}'  AND cpe.ss_salesorder_id='{poid}'

productprocessseq = SELECT ppr.id, wc.code as workcentre,CONCAT(TRIM(pp.code), TRIM(pr.revision_number)) AS product, \
                    ppr.runtimemins as runtimeMinutes,ppr.setuptimemins as setupminutes, \
                    ppr.processsequencenumber as seqno, ppr.instruction \
                    FROM ppc.pd_product_productroute pr \
                    join data.pd_product pp on(pp.id=pr.product_id) \
                    join ppc.pd_product_productprocessroute ppr on (ppr.productroute_id = pr.id) \
                    join data.wr_workcentre wc on (wc.id = pr.workcentre_id ) \
                    join data.wr_workcentre_workstation ws on (ws.id = ppr.workstation_id) \
                    where pr.product_id = '{product_id}' AND pr.revision_number='{revision_number}' AND wc.id ='{workcentre_id}' \
                    Order by ppr.processsequencenumber ASC \



# SELECT pdpr.id,wc.code as workcentre,CONCAT(TRIM(pp.code), TRIM(ppp.revision_number)) AS product,ppp.totalruntimemins as runtimeMinutes, \
#                     ppp.totalsetuptimemins as setupminutes,pdpr.processsequencenumber as seqno, pdpr.instruction \
#                     FROM data.pd_product_productbillofmaterial ppb \
#                     join data.pd_product pp on(pp.id=ppb.pd_product_id) \
#                     join ppc.pd_product_productroute ppp on (ppp.productbillofmaterial_id = ppb.id) \
#                     join ppc.pd_product_productprocessroute pdpr on(pdpr.productroute_id=ppp.id) \
#                     join data.wr_workcentre_workstation ws on (ws.id = ppp.workstation_id) join data.wr_workcentre wc on (wc.id = ws.wr_workcentre_id ) \
#                     where ppb.pd_product_id = '{product_id}' AND ppp.revision_number='{revision_number}' AND ws.wr_workcentre_id ='{workcentre_id}' \
#                     Order by ppp.sequencenumber ASC

wcseqwiseprogramlist = SELECT ppd.id,CONCAT(TRIM(pp.code), TRIM(ppd.revision_number)) AS product, ppd.pd_product_id, ppd.mdoc_id, ppd.revision_number, ppd.remark,ppd.imagetype_code, ppd.workcentre_id, ppd.workstation_id, \
                   ppd.processroute_id, ppd.process_seqnumber \
                   FROM data.pd_product_folder ppd \
                   join data.pd_product pp on(pp.id=ppd.pd_product_id) \
                   where pd_product_id ='{product_id}' AND revision_number='{revision_number}' And workcentre_id='{workcentre_id}' AND process_seqnumber='{seqno}' AND verify= true
                
toollistquery =    SELECT id, manufacturertoolcode as toolname \
                   FROM data.pd_tool order by manufacturertoolcode ASC

getoperatorrejresons= SELECT id, rejectedreasons FROM ppc.operator_rejected_reasons

getproductBomid = SELECT id FROM data.pd_product_productbillofmaterial where pd_product_id='{productid}'

getproductworkstationJobStatusId =  SELECT id \
                                    FROM ppc.pd_product_workstationroute_status where product_id='{scanCode.barcodeProductid}' \
                                    AND rmsissue_id='{scanCode.idd}'  \
                                    AND workcentre_id ='{widget.loginpagedata.workCentreid}' AND  \
                                    workstation_id ='{widget.loginpagedata.workstationid}' \
                                    AND employee_id='{widget.loginpagedata.loginId}' \
                                    AND process_id='{widget.productrouteid}' \
                                    AND process_sequence='{widget.seqno}' \
                                    AND startprocesstime is not null AND endprocesstime is null \
                                    AND endprocessflag= 0 OR endprocessflag = -1 AND endproductionflag= 0


getlastproductroutedetails = Select ppl.production_route_version, ppl.sequance_number,workcenter_id,pd_product_id,productbillofmaterial_id,revision_number \
                            from ppc.pd_product_productroute_last ppl \
                            where pd_product_id= '{productid}' and revision_number='{Rrevision_number}' \
                            order by updatedon desc limit 1

# #----when route is empty
createproductmachineroute=  INSERT INTO ppc.pd_product_productroute_last( \
                            production_route_version, sequance_number, pd_product_id, workcenter_id, workstation_id,productbillofmaterial_id,revision_number) \
                            VALUES (1 , 10, '{productiid}','{wcid}', '{wsid}','{BOMid}','{Rrevision_number}')


# #--when route avilable and new record insert 
productmachineroutewithdiffseq= INSERT INTO ppc.pd_product_productroute_last( \
                                production_route_version, sequance_number, pd_product_id, workcenter_id, workstation_id,productbillofmaterial_id,revision_number) \
                                VALUES ($newversion, $nseqno, '{productiid}', '{wcid}', '{wsid}','{BOMid}','{Rrevision_number}')

# #---when route avilable but route complete then start whith new version 
productmachineroutewithdiffversion= INSERT INTO ppc.pd_product_productroute_last(
                                    production_route_version, sequance_number, pd_product_id, workcenter_id, workstation_id,productbillofmaterial_id,revision_number)
                                    VALUES ($newversion , 10, '{productiid}', '{wcid}', '{wsid}','{BOMid}','{Rrevision_number}')



startsettinginsert= INSERT INTO ppc.pd_product_workstationroute_status( \
                    product_id, rmsissue_id, produced_qty, \
                    workcentre_id, workstation_id, startprocesstime, job_status, employee_id,revision_number) \
                    VALUES ('{productid}','{rmsid}', 0, \
                    '{wcid}', '{wsid}', now(), 0, '{employeeid}','{Rrevisionnumber}') \

endProcess= UPDATE ppc.pd_product_workstationroute_status \
            SET  endprocesstime = now(), produced_qty={okquantity}, \
            rejected_qty={rejqty}, rejectedreasons= '{rejectedreason}', \
            endprocessflag= 1, job_status = 0,  endproductionflag= 0,produced_count={pcount},production_time={ptime},idle_time={itime},energy_consumed={energy} \
            WHERE product_id='{productid}' AND rmsissue_id='{rmsissueid}' \
            AND id= '{productionstatusID}' AND employee_id='{employeeid}'

ompendProcess= UPDATE ppc.pd_product_workstationroute_status \
            SET  endprocesstime = now(), produced_qty={okquantity}, \
            rejected_qty={rejqty}, rejectedreasons= '{rejectedreason}', \
            endprocessflag= 1, job_status = 0,  endproductionflag= 0 \
            WHERE id= '{productionstatusID}' \

finalEndProduction= UPDATE ppc.pd_product_workstationroute_status  \
                    SET endprocessflag= 1, job_status = 0,  endproductionflag= 1 \
                    where product_id='{productid}' and revision_number= '{revisionno}' and rmsissue_id='{rmsissueid}' \
                    and workcentre_id ='{workcentreid}'



Autostartsettinginsert= INSERT INTO ppc.pd_product_workstationroute_status( \
                        product_id, process_id, process_sequence, rmsissue_id, produced_qty, \
                        workcentre_id, workstation_id, startprocesstime, job_status, employee_id,revision_number,cp_runnumber, cp_excution_id) \
                        VALUES ('{productid}','{processroute_id}','{seqno}','{rmsid}', 0, \
                       '{wcid}', '{wsid}', now(), 0, '{employeeid}','{Rrevisionnumber}',{cpr},'{cpeid}') \

Ompstartsettinginsert=  INSERT INTO ppc.pd_product_workstationroute_status( \
                        product_id, rmsissue_id, produced_qty, \
                        workcentre_id, workstation_id, startprocesstime, job_status, employee_id, revision_number, process_sequence) \
                        VALUES ('{productid}','{rmsid}', 0, \
                        '{wcid}', '{wsid}', now(), 0, '{employeeid}','{Rrevisionnumber}', {process_sequence}) \


# ompupdatestartproduction = UPDATE ppc.pd_product_workstationroute_status \
#                         SET  endprocesstime = now(), produced_qty={okquantity}, \
#                         rejected_qty={rejqty}, rejectedreasons= '{rejectedreason}', \
#                         endprocessflag= 1, job_status = 0,  endproductionflag= 0 \
#                         WHERE product_id='{productid}' AND rmsissue_id='{rmsissueid}' \
#                         AND id= '{productionstatusID}' AND employee_id='{employeeid}'

ompupdatestartproduction= UPDATE ppc.pd_product_workstationroute_status \
                          SET  startproductiontime= now() \
                          WHERE product_id='{productid}' and rmsissue_id='{rmsid}' and id= '{id}' and workcentre_id ='{wcid}' \
                          and workstation_id = '{wsid}' and employee_id='{employeeid}' \

requestidd = SELECT NEXTVAL('ppc.requestid') AS new_request_id

getpriviousproductiontime =  SELECT id, startprocesstime, startproductiontime FROM ppc.pd_product_workstationroute_status  \
                            where product_id='{productid}' \
                            and rmsissue_id = '{rmsid}' \
                            and workcentre_id ='{wcid}' \
                            and workstation_id = '{wsid}' \
							and revision_number ='{Rrevisionnumber}' \
                            and employee_id ='{employeeid}' \
                            and id='{productionstatusid}'

finajobproductionstatus=    SELECT endprocessflag, endproductionflag, job_status, workcentre_id, workstation_id \
                            FROM ppc.pd_product_workstationroute_status \
                            where endprocessflag = 1 and endproductionflag=1 and job_status=0  \
                            and product_id='{productid}' and revision_number='{revisionno}' \
                            and rmsissue_id='{rmsissueid}'  and \
                            workcentre_id = '{workcentreid}' \
                            and workstation_id = '{workstationid}' and process_id='{processid}'

getMachineUserData = SELECT machineid, machinename, machineip, machineuser \
                  	 FROM data.wr_workcentre_workstation \
                	 where  wr_workcentre_id='{workcentreid}' and id ='{workstationid}' \


getInstructionData= SELECT instruction FROM ppc.pd_product_productprocessroute	where id='{processrouteid}'

inserttoollistdata = INSERT INTO ppc.productiontoollist (workstation_status_id, toollist) \
                    VALUES ('{productionstatusid}', '{toollistinsert}') \

cpmessagestatuscheck= SELECT id, updatedon, deleted, employee_id, product_id, revision_no, rmsissue_id, po_id, description, lineitno \
	                  FROM ppc.pd_product_capacityplan_message \
	                  where product_id='{productid}' and revision_no='{revisionno}' and rmsissue_id='{rmsissueid}' and po_id='{po_id}' and lineitno='{linno}' \


cpmessageinsert=  INSERT INTO ppc.pd_product_capacityplan_message( \
                  employee_id, product_id, revision_no, rmsissue_id, po_id, lineitno) \
                  VALUES ('{employee_id}', '{productid}', '{revisionno}', '{rmsissueid}', '{po_id}','{linno}') \


prmessagestatuscheck = SELECT id, updatedon, employee_id, authorized_person, message, product_id, revision_no, rmsissue_id, po_id, lineitno, workcentre_id \
	                   FROM ppc.pd_product_noroute_message \
	                   where product_id='{productid}' and revision_no='{revisionno}' and rmsissue_id='{rmsissueid}' and po_id='{po_id}' and lineitno='{linno}' and workcentre_id='{wcid}' \

avilablePR=   SELECT wc.code FROM ppc.pd_product_productroute pdpr \
              join data.wr_workcentre wc on (wc.id=pdpr.workcentre_id) \
              where product_id='{productid}' and revision_number='{revisionno}' \
              order by pdpr.sequencenumber asc \

prmessageinsert=  INSERT INTO ppc.pd_product_noroute_message( \
                  employee_id, product_id, revision_no, rmsissue_id, po_id, lineitno, workcentre_id,authorized_person, message) \
                  VALUES ('{employee_id}', '{productid}', '{revisionno}', '{rmsissueid}', '{po_id}','{linno}','{wcid}','{authori}','{mze}') \

tabletloginlosinsert= INSERT INTO ppc.tablet_login_logs( \
                    updatedon, employee_id, androidid, workcentre_id, workstation_id , ipaddress, loginstatus,logtime) \
                    VALUES ( now(), '{employee_id}', '{tablet_id}', '{wcid}', '{wsid}', '{ip}','{status}', now())

firstscanstatusproduct = SELECT id FROM ppc.pd_product_workstationroute_status  \
                         where product_id='{productid}'      

insertfirstproductcadlab =INSERT INTO ppc.pd_product_new_production_product_list_cadlab( \
                    version, updatedon, createdby, product_id, poqty, workstation_id, employee_id, po_number, revision_no) \
                    VALUES ( 0, now(), '', '{productid}', '{poqtyyy}', '{wsid}', '{employeeiid}', '{pono}', '{Rrevisionnumber}')                 
						            
operatorworkstatusall = SELECT pws.id,pp.code as product ,pws.revision_number as revisionno,ppd.mdoc_id AS pdfmdoc_id, \
                        rms.referancedocumentnumber as po,rms.lineitemnumber as lineitno, \
                        pws.process_sequence as seqno,rms.tobeproducedquantity, produced_qty, ws.code as workstation, startprocesstime, endprocesstime \
                        FROM ppc.pd_product_workstationroute_status pws \
                        join data.pd_product pp on (pp.id=pws.product_id) \
                        join data.wr_workcentre_workstation ws on (ws.id = pws.workstation_id) \
                        join data.rms_rawmaterialissue rms on (rms.id =pws.rmsissue_id) \
                        left join data.pd_product_drawing ppd ON (pws.product_id = ppd.pd_product_id ) and (ppd.revision_number = pws.revision_number) \
                        where employee_id='{empid}' \
                        order by startprocesstime desc limit 200