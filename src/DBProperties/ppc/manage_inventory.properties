inventoryManagementQuery =  INSERT INTO ppc.pd_product_dailyinventoryledger( \
                            createdby, documentnumber, documentdate, product_id, parentproduct_id, sodetails_id, quantity, \
                            drcr, uom_id, remark, revision_number) \
                            VALUES ('{createdby}', TO_CHAR(CURRENT_DATE, 'YYYYMMDD'), CURRENT_DATE, '{product_id}', \
                            CASE \
                                WHEN '{parentproduct_id}' = 'null' OR '{parentproduct_id}' = '' \
                                THEN NULL \
                                ELSE '{parentproduct_id}' \
                            END, \
                            CASE \
                                WHEN '{sodetails_id}' = 'null' OR '{sodetails_id}' = '' \
                                THEN NULL \
                                ELSE '{sodetails_id}' \
                            END, \
                            ((SELECT ppc.convert_quantity_in_specific_uom({new_quantity}, '{preUOM}', '{postUOM}')))::numeric, \
                            '{drcr}', '{postUOM}', \
                              CASE \
                                WHEN '{remark}' = 'null' OR '{remark}' = '' \
                                THEN NULL \
                                ELSE '{remark}' \
                            END, \
                            '{revision_number}') \
                            RETURNING Id;


                            # SELECT ppc.manage_inventory( \
                            #     input_product_id =>  '{product_id}', \
                            #     input_revision_number => '{revision_number}', \
                            #     input_createdby => '{createdby}', \
                            #     quantity => ((SELECT ppc.convert_quantity_in_specific_uom({new_quantity}, '{preUOM}', '{postUOM}')))::numeric, \
                            #     input_parentproduct_id => CASE WHEN '{parentproduct_id}' = 'NULL' THEN NULL ELSE '{parentproduct_id}' END, \
                            #     input_sodetails_id => CASE WHEN '{sodetails_id}' = 'NULL' THEN NULL ELSE '{sodetails_id}' END, \
                            #     input_uom_id => '{postUOM}', \
                            #     input_drcr => '{drcr}' \
                            # );

currentStock =  SELECT \
                    product_id, TRIM(revision_number) AS revision_number, \
                    COALESCE(SUM(CASE WHEN drcr = 'D' THEN quantity ELSE 0 END),0)::numeric AS total_inward, \
                    COALESCE(SUM(CASE WHEN drcr = 'C' THEN quantity ELSE 0 END),0)::numeric AS total_issued, \
                    (COALESCE(SUM(CASE WHEN drcr = 'D' THEN quantity ELSE 0 END),0) -  COALESCE(SUM(CASE WHEN drcr = 'C' THEN quantity ELSE 0 END),0))::numeric AS current_stock \
                FROM ppc.pd_product_dailyinventoryledger \
                WHERE deleted = false AND product_id = '{product_id}' \
                GROUP BY product_id, revision_number \
                ORDER BY product_id;


                # SELECT COALESCE(currentstock, 0) AS currentstock \
                # FROM ppc.pd_product_productinventory \
                # WHERE product_id = '{product_id}'

alreadyIssuedStockOfSelectedProduct =   SELECT COALESCE(quantity,0) AS issued_quantity, DATE(pdl.updatedon) AS issued_on, CONCAT(firstname,  ' ', lastname) AS issued_by, \
                                        pdl.id AS product_ledger_id,  parentproduct_id, sodetails_id, uom_id, productionschedule_id \
                                        FROM ppc.pd_product_dailyinventoryledger pdl \
                                        JOIN data.hr_employee e ON e.id = pdl.createdby \
                                        WHERE product_id = '{product_id}' AND revision_number = '{revision_number}' AND drcr ='C' AND parentproduct_id = '{parentproduct_id}' AND sodetails_id = '{sodetails_id}'

                                        # SELECT COALESCE(quantity,0) AS issued_quantity, DATE(pdl.updatedon) AS issued_on, CONCAT(firstname,  ' ', lastname) AS issued_by, \
                                        # pdl.id AS product_ledger_id, productinventory_id, parentproduct_id, sodetails_id, uom_id, productionschedule_id \
                                        # FROM ppc.pd_product_dailyinventoryledger pdl \
                                        # JOIN ppc.pd_product_productinventory pi ON pi.id = productinventory_id \
                                        # JOIN data.hr_employee e ON e.id = pdl.createdby \
                                        # WHERE product_id = '{product_id}' AND revision_number = '{revision_number}' AND drcr ='C' AND parentproduct_id = '{parentproduct_id}' AND sodetails_id = '{sodetails_id}'


totalIssuedQuantityOfSelectedProduct =  SELECT COALESCE(SUM(quantity), 0) AS total_issued_quantity \
                                        FROM ppc.pd_product_dailyinventoryledger pdl \
                                        JOIN ppc.pd_product_productinventory pi ON pi.id = productinventory_id \
                                        WHERE product_id = '{product_id}' AND revision_number = '{revision_number}' AND drcr ='C'