registerStock = DO $$ \
                DECLARE \
                    product_id VARCHAR := '{pd_product_id}'; \
                    stock_quantity INT := {stockqty}; \
                    box_number VARCHAR := '{boxnumber}'; \
                    updated_by VARCHAR := '{updatedby}'; \
                    revision_value VARCHAR := '{revision}'; \
                    existing_record_count INT; \
                    returningid VARCHAR; \
                    inserted_rows INT; \
                BEGIN \
                    SELECT COUNT(*) INTO existing_record_count \
                    FROM ppc.pd_product_productstock \
                    WHERE pd_product_id = product_id AND revision = revision_value; \
                    IF existing_record_count = 0 THEN \
                        INSERT INTO ppc.pd_product_productstock(pd_product_id, stockqty, boxnumber, updatedon, updatedby, revision) \
                        VALUES (product_id, stock_quantity, box_number, NOW(), updated_by, revision_value) \
                        RETURNING 1 INTO inserted_rows; \
                    ELSE \
                        UPDATE ppc.pd_product_productstock \
                        SET stockqty = stockqty + stock_quantity \
                        WHERE pd_product_id = product_id AND revision = revision_value \
                        RETURNING 1 INTO inserted_rows; \
                    END IF; \
                    IF inserted_rows = 1 THEN \
                        RAISE NOTICE 'Inserted successfully'; \
                    ELSE \
                        RAISE NOTICE 'Record was not inserted'; \
                    END IF; \
                END $$; \

availableStock =    SELECT pp.code AS product, pps.revision, pps.stockqty, pps.boxnumber, CONCAT( hr.firstname, '  ', hr.lastname) AS stock_uploader, \
                    pps.id, pps.pd_product_id, pps.updatedon, pps.updatedby \
                    FROM ppc.pd_product_productstock pps \
                    JOIN data.pd_product pp ON pp.id = pps.pd_product_id \
                    JOIN data.hr_employee hr ON hr.id = pps.updatedby \

decreaseStock = DO $$ \
                DECLARE \
                    product_id VARCHAR := '{product_id}'; \
                    product_revision VARCHAR := '{revision_value}'; \
                    stock_quantity INT := {stock_quantity}; \
                    existing_stock INT; \
                    updated_stock INT; \
                    rows_affected INT; \
                BEGIN \
                    SELECT stockqty \
                    INTO existing_stock \
                    FROM  ppc.pd_product_productstock \
                    WHERE pd_product_id = product_id \
                    AND revision = product_revision; \
                    IF existing_stock < stock_quantity THEN \
                        RAISE EXCEPTION 'Not enough stock available.'; \
                    ELSE \
                        UPDATE ppc.pd_product_productstock \
                        SET stockqty = stockqty - stock_quantity \
                        WHERE pd_product_id = product_id AND revision = product_revision; \
                        GET DIAGNOSTICS rows_affected = ROW_COUNT; \
                        IF rows_affected > 0 THEN \
                            RAISE NOTICE 'Record updated successfully'; \
                        ELSE \
                            RAISE EXCEPTION 'No record updated'; \
                        END IF; \
                    END IF; \
                END $$; \


               